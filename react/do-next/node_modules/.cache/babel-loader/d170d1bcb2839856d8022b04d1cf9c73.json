{"ast":null,"code":"var _jsxFileName = \"/Users/dhs/do-next/src/track/TrackEdit.tsx\";\nimport React from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nconst TrackEdit = _ref => {\n  let {\n    save\n  } = _ref;\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"label\", {\n      children: [\"text:\", /*#__PURE__*/_jsxDEV(\"input\", {\n        // value={text}\n        size: 40,\n        onInput: event => {\n          const data = event.target.value; // setText(data)\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 9,\n        columnNumber: 21\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 9,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 17,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: () => {\n        save();\n      },\n      children: \"Done\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 18,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 20,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true);\n};\n\n_c = TrackEdit;\nexport default TrackEdit;\n\nvar _c;\n\n$RefreshReg$(_c, \"TrackEdit\");","map":{"version":3,"names":["React","TrackEdit","save","event","data","target","value"],"sources":["/Users/dhs/do-next/src/track/TrackEdit.tsx"],"sourcesContent":["import React, { useState } from 'react'\n\ninterface TrackEditProps {\n    save: () => void\n}\n\nconst TrackEdit = ({ save }: TrackEditProps) => {\n    return <>\n        <label>text:<input\n            // value={text}\n            size={40}\n            onInput={event => {\n                const data = (event.target as HTMLInputElement).value\n                // setText(data)\n            }}\n        /></label>\n        <br />\n        <button onClick={() => { save() }} >Done</button>\n        {/* <button onClick={() => save({ text: text, beginning: beginning, minutes: 0, })} >Done</button> */}\n        <br/>\n    </>\n}\n\nexport default TrackEdit\n"],"mappings":";AAAA,OAAOA,KAAP,MAAgC,OAAhC;;;;AAMA,MAAMC,SAAS,GAAG,QAA8B;EAAA,IAA7B;IAAEC;EAAF,CAA6B;EAC5C,oBAAO;IAAA,wBACH;MAAA,iCAAY;QACR;QACA,IAAI,EAAE,EAFE;QAGR,OAAO,EAAEC,KAAK,IAAI;UACd,MAAMC,IAAI,GAAID,KAAK,CAACE,MAAP,CAAmCC,KAAhD,CADc,CAEd;QACH;MANO;QAAA;QAAA;QAAA;MAAA,QAAZ;IAAA;MAAA;MAAA;MAAA;IAAA,QADG,eASH;MAAA;MAAA;MAAA;IAAA,QATG,eAUH;MAAQ,OAAO,EAAE,MAAM;QAAEJ,IAAI;MAAI,CAAjC;MAAA;IAAA;MAAA;MAAA;MAAA;IAAA,QAVG,eAYH;MAAA;MAAA;MAAA;IAAA,QAZG;EAAA,gBAAP;AAcH,CAfD;;KAAMD,S;AAiBN,eAAeA,SAAf"},"metadata":{},"sourceType":"module"}