{"ast":null,"code":"var _jsxFileName = \"/Users/dhs/do-next/src/track/TrackEdit.tsx\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from 'react';\nimport { formatDate } from '../DateUtilities';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nconst TrackEdit = _ref => {\n  _s();\n\n  let {\n    track,\n    save\n  } = _ref;\n  const [text, setText] = useState(track.text || '');\n  const [tracked] = useState(track.tracked || []);\n  const hasTimestamps = tracked.length > 0;\n  const lastTimestamp = hasTimestamps ? formatDate(new Date(track.tracked[0])) : '';\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"label\", {\n      children: [\"text:\", /*#__PURE__*/_jsxDEV(\"input\", {\n        value: text,\n        size: 40,\n        onInput: event => {\n          const data = event.target.value;\n          setText(data);\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 18,\n        columnNumber: 21\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 18,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 26,\n      columnNumber: 9\n    }, this), hasTimestamps && /*#__PURE__*/_jsxDEV(\"label\", {\n      children: [\"last:\", /*#__PURE__*/_jsxDEV(\"input\", {\n        value: lastTimestamp,\n        size: 40 // onInput={event => {\n        //     const data = (event.target as HTMLInputElement).value\n        //     setText(data)\n        // }}\n\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 27,\n        columnNumber: 39\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 27,\n      columnNumber: 27\n    }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: () => {\n        save({\n          text: text,\n          tracked: tracked\n        });\n      },\n      children: \"Done\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true);\n};\n\n_s(TrackEdit, \"y4d+Vrbdo/Xrf6SdtQl7lt0cCc8=\");\n\n_c = TrackEdit;\nexport default TrackEdit;\n\nvar _c;\n\n$RefreshReg$(_c, \"TrackEdit\");","map":{"version":3,"names":["React","useState","formatDate","TrackEdit","track","save","text","setText","tracked","hasTimestamps","length","lastTimestamp","Date","event","data","target","value"],"sources":["/Users/dhs/do-next/src/track/TrackEdit.tsx"],"sourcesContent":["import React, { useState } from 'react'\nimport { formatDate } from '../DateUtilities'\nimport { Track } from '../DoData'\n\ninterface TrackEditProps {\n    track: Track\n    save: (track: Track) => void\n}\n\nconst TrackEdit = ({ track, save }: TrackEditProps) => {\n    const [text, setText] = useState(track.text || '')\n    const [tracked] = useState(track.tracked || [])\n\n    const hasTimestamps = tracked.length > 0\n    const lastTimestamp = hasTimestamps ? formatDate(new Date(track.tracked[0])) : ''\n\n    return <>\n        <label>text:<input\n            value={text}\n            size={40}\n            onInput={event => {\n                const data = (event.target as HTMLInputElement).value\n                setText(data)\n            }}\n        /></label>\n        <br />\n        {hasTimestamps && <label>last:<input\n            value={lastTimestamp}\n            size={40}\n            // onInput={event => {\n            //     const data = (event.target as HTMLInputElement).value\n            //     setText(data)\n            // }}\n        /></label>}\n        <br />\n        <button onClick={() => {\n            save({ text: text, tracked: tracked })\n        }} >Done</button>\n        <br />\n    </>\n}\n\nexport default TrackEdit\n"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;AACA,SAASC,UAAT,QAA2B,kBAA3B;;;;AAQA,MAAMC,SAAS,GAAG,QAAqC;EAAA;;EAAA,IAApC;IAAEC,KAAF;IAASC;EAAT,CAAoC;EACnD,MAAM,CAACC,IAAD,EAAOC,OAAP,IAAkBN,QAAQ,CAACG,KAAK,CAACE,IAAN,IAAc,EAAf,CAAhC;EACA,MAAM,CAACE,OAAD,IAAYP,QAAQ,CAACG,KAAK,CAACI,OAAN,IAAiB,EAAlB,CAA1B;EAEA,MAAMC,aAAa,GAAGD,OAAO,CAACE,MAAR,GAAiB,CAAvC;EACA,MAAMC,aAAa,GAAGF,aAAa,GAAGP,UAAU,CAAC,IAAIU,IAAJ,CAASR,KAAK,CAACI,OAAN,CAAc,CAAd,CAAT,CAAD,CAAb,GAA4C,EAA/E;EAEA,oBAAO;IAAA,wBACH;MAAA,iCAAY;QACR,KAAK,EAAEF,IADC;QAER,IAAI,EAAE,EAFE;QAGR,OAAO,EAAEO,KAAK,IAAI;UACd,MAAMC,IAAI,GAAID,KAAK,CAACE,MAAP,CAAmCC,KAAhD;UACAT,OAAO,CAACO,IAAD,CAAP;QACH;MANO;QAAA;QAAA;QAAA;MAAA,QAAZ;IAAA;MAAA;MAAA;MAAA;IAAA,QADG,eASH;MAAA;MAAA;MAAA;IAAA,QATG,EAUFL,aAAa,iBAAI;MAAA,iCAAY;QAC1B,KAAK,EAAEE,aADmB;QAE1B,IAAI,EAAE,EAFoB,CAG1B;QACA;QACA;QACA;;MAN0B;QAAA;QAAA;QAAA;MAAA,QAAZ;IAAA;MAAA;MAAA;MAAA;IAAA,QAVf,eAkBH;MAAA;MAAA;MAAA;IAAA,QAlBG,eAmBH;MAAQ,OAAO,EAAE,MAAM;QACnBN,IAAI,CAAC;UAAEC,IAAI,EAAEA,IAAR;UAAcE,OAAO,EAAEA;QAAvB,CAAD,CAAJ;MACH,CAFD;MAAA;IAAA;MAAA;MAAA;MAAA;IAAA,QAnBG,eAsBH;MAAA;MAAA;MAAA;IAAA,QAtBG;EAAA,gBAAP;AAwBH,CA/BD;;GAAML,S;;KAAAA,S;AAiCN,eAAeA,SAAf"},"metadata":{},"sourceType":"module"}