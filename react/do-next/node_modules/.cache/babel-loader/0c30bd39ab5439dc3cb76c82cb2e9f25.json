{"ast":null,"code":"var _jsxFileName = \"/Users/dhs/do-next/src/event/Event.tsx\";\nimport React from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar Day;\n\n(function (Day) {\n  Day[Day[\"Sunday\"] = 0] = \"Sunday\";\n  Day[Day[\"Monday\"] = 1] = \"Monday\";\n  Day[Day[\"Tuesday\"] = 2] = \"Tuesday\";\n})(Day || (Day = {}));\n\nconst EventThingy = _ref => {\n  let {\n    index,\n    events\n  } = _ref;\n  const event = events[index];\n  const firstEventStartDate = new Date(event.start);\n  const dayOfWeek = Day[firstEventStartDate.getDay()];\n  const startTime = firstEventStartDate.getHours() + \":\" + firstEventStartDate.getMinutes();\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [index == 0 && /*#__PURE__*/_jsxDEV(\"h1\", {\n      children: dayOfWeek\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 22,\n      columnNumber: 24\n    }, this), index == 0 && /*#__PURE__*/_jsxDEV(\"h2\", {\n      children: startTime\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 23,\n      columnNumber: 24\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: event.text\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 24,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 21,\n    columnNumber: 12\n  }, this);\n};\n\n_c = EventThingy;\nexport default EventThingy;\n\nvar _c;\n\n$RefreshReg$(_c, \"EventThingy\");","map":{"version":3,"names":["React","Day","EventThingy","index","events","event","firstEventStartDate","Date","start","dayOfWeek","getDay","startTime","getHours","getMinutes","text"],"sources":["/Users/dhs/do-next/src/event/Event.tsx"],"sourcesContent":["import React from 'react'\nimport { DoEventsData, EventData } from '../DoData'\n\ninterface EventProps {\n    index: number\n    events: EventData[]\n}\n\nenum Day {\n    Sunday,\n    Monday,\n    Tuesday,\n}\n\nconst EventThingy = ({ index, events }: EventProps) => {\n    const event = events[index]\n    const firstEventStartDate = new Date(event.start)\n    const dayOfWeek = Day[firstEventStartDate.getDay()]\n    const startTime = firstEventStartDate.getHours() + \":\" + firstEventStartDate.getMinutes()\n\n    return <div>\n        {index == 0 && <h1>{dayOfWeek}</h1>}\n        {index == 0 && <h2>{startTime}</h2>}\n        <div>{event.text}</div>\n    </div>\n}\n\nexport default EventThingy"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;;IAQKC,G;;WAAAA,G;EAAAA,G,CAAAA,G;EAAAA,G,CAAAA,G;EAAAA,G,CAAAA,G;GAAAA,G,KAAAA,G;;AAML,MAAMC,WAAW,GAAG,QAAmC;EAAA,IAAlC;IAAEC,KAAF;IAASC;EAAT,CAAkC;EACnD,MAAMC,KAAK,GAAGD,MAAM,CAACD,KAAD,CAApB;EACA,MAAMG,mBAAmB,GAAG,IAAIC,IAAJ,CAASF,KAAK,CAACG,KAAf,CAA5B;EACA,MAAMC,SAAS,GAAGR,GAAG,CAACK,mBAAmB,CAACI,MAApB,EAAD,CAArB;EACA,MAAMC,SAAS,GAAGL,mBAAmB,CAACM,QAApB,KAAiC,GAAjC,GAAuCN,mBAAmB,CAACO,UAApB,EAAzD;EAEA,oBAAO;IAAA,WACFV,KAAK,IAAI,CAAT,iBAAc;MAAA,UAAKM;IAAL;MAAA;MAAA;MAAA;IAAA,QADZ,EAEFN,KAAK,IAAI,CAAT,iBAAc;MAAA,UAAKQ;IAAL;MAAA;MAAA;MAAA;IAAA,QAFZ,eAGH;MAAA,UAAMN,KAAK,CAACS;IAAZ;MAAA;MAAA;MAAA;IAAA,QAHG;EAAA;IAAA;IAAA;IAAA;EAAA,QAAP;AAKH,CAXD;;KAAMZ,W;AAaN,eAAeA,WAAf"},"metadata":{},"sourceType":"module"}