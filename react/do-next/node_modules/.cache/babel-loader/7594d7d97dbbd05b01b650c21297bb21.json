{"ast":null,"code":"var _jsxFileName = \"/Users/dhs/do-next/src/ToDo.tsx\",\n    _s = $RefreshSig$();\n\nimport React from \"react\";\nimport useLocalStorageState from 'use-local-storage-state';\nimport checker from \"./Checker\";\nimport { defaultToDoData } from \"./storage/Storage\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst ToDo = _ref => {\n  _s();\n\n  let {\n    todo\n  } = _ref;\n  const [localStorage, setLocalStorage] = useLocalStorageState('donext', {\n    defaultValue: defaultToDoData\n  });\n  return /*#__PURE__*/_jsxDEV(\"li\", {\n    children: [/*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"checkbox\",\n      onClick: event => {\n        checker(todo, localStorage, setLocalStorage);\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 17,\n      columnNumber: 9\n    }, this), todo.text]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 16,\n    columnNumber: 12\n  }, this);\n};\n\n_s(ToDo, \"Cdh3uTKqySAqTIXJ0PjvqCWkcds=\", false, function () {\n  return [useLocalStorageState];\n});\n\n_c = ToDo;\nexport default ToDo;\n\nvar _c;\n\n$RefreshReg$(_c, \"ToDo\");","map":{"version":3,"names":["React","useLocalStorageState","checker","defaultToDoData","ToDo","todo","localStorage","setLocalStorage","defaultValue","event","text"],"sources":["/Users/dhs/do-next/src/ToDo.tsx"],"sourcesContent":["import React from \"react\"\nimport useLocalStorageState from 'use-local-storage-state'\nimport checker from \"./Checker\"\nimport { ToDoData } from \"./DoData\"\nimport { defaultToDoData } from \"./storage/Storage\"\n\nexport interface ToDoProps {\n    todo: ToDoData\n}\n\nconst ToDo = ({ todo }: ToDoProps) => {\n    const [localStorage, setLocalStorage] = useLocalStorageState('donext', {\n        defaultValue: defaultToDoData\n    })\n\n    return <li >\n        <input\n            type=\"checkbox\"\n            onClick={(event) => { checker(todo, localStorage, setLocalStorage) }}\n        />\n        {todo.text}\n    </li>\n}\n\nexport default ToDo\n"],"mappings":";;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,oBAAP,MAAiC,yBAAjC;AACA,OAAOC,OAAP,MAAoB,WAApB;AAEA,SAASC,eAAT,QAAgC,mBAAhC;;;AAMA,MAAMC,IAAI,GAAG,QAAyB;EAAA;;EAAA,IAAxB;IAAEC;EAAF,CAAwB;EAClC,MAAM,CAACC,YAAD,EAAeC,eAAf,IAAkCN,oBAAoB,CAAC,QAAD,EAAW;IACnEO,YAAY,EAAEL;EADqD,CAAX,CAA5D;EAIA,oBAAO;IAAA,wBACH;MACI,IAAI,EAAC,UADT;MAEI,OAAO,EAAGM,KAAD,IAAW;QAAEP,OAAO,CAACG,IAAD,EAAOC,YAAP,EAAqBC,eAArB,CAAP;MAA8C;IAFxE;MAAA;MAAA;MAAA;IAAA,QADG,EAKFF,IAAI,CAACK,IALH;EAAA;IAAA;IAAA;IAAA;EAAA,QAAP;AAOH,CAZD;;GAAMN,I;UACsCH,oB;;;KADtCG,I;AAcN,eAAeA,IAAf"},"metadata":{},"sourceType":"module"}