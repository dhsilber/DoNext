{"ast":null,"code":"var _jsxFileName = \"/Users/dhs/do-next/src/task/TaskEdit.tsx\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from 'react';\nimport useLocalStorageState from 'use-local-storage-state';\nimport { ProjectStorageKey } from '../Constants';\nimport { defaultProjectData } from '../storage/Storage';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst TaskEdit = _ref => {\n  _s();\n\n  let {\n    task,\n    save\n  } = _ref;\n  const [projectStorage] = useLocalStorageState(ProjectStorageKey, {\n    defaultValue: defaultProjectData\n  });\n  const [text, setText] = useState(task.text || '');\n  const [details, setDetails] = useState(task.details || '');\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"label\", {\n      children: [\"text:\", /*#__PURE__*/_jsxDEV(\"input\", {\n        defaultValue: text,\n        size: 40,\n        onInput: event => {\n          const data = event.target.value;\n          setText(data);\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 20,\n        columnNumber: 21\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 20,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n      value: task.project,\n      children: [/*#__PURE__*/_jsxDEV(\"option\", {\n        children: \"No project\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 29,\n        columnNumber: 13\n      }, this), projectStorage.projects.map(project => /*#__PURE__*/_jsxDEV(\"option\", {\n        value: project.id,\n        children: project.text\n      }, 'project' + project.id, false, {\n        fileName: _jsxFileName,\n        lineNumber: 31,\n        columnNumber: 17\n      }, this))]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n      children: [\"details:\", /*#__PURE__*/_jsxDEV(\"input\", {\n        defaultValue: details,\n        size: 60,\n        onInput: event => {\n          const data = event.target.value;\n          setDetails(data);\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 37,\n        columnNumber: 24\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: () => {\n        save({\n          id: task.id,\n          text: text,\n          details: details,\n          archived: task.archived,\n          project: 0,\n          time: 0\n        });\n      },\n      children: \"Done\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 19,\n    columnNumber: 12\n  }, this);\n};\n\n_s(TaskEdit, \"qO0+x9QrMaNwjjpBA4ZprZShxXE=\", false, function () {\n  return [useLocalStorageState];\n});\n\n_c = TaskEdit;\nexport default TaskEdit;\n\nvar _c;\n\n$RefreshReg$(_c, \"TaskEdit\");","map":{"version":3,"names":["React","useState","useLocalStorageState","ProjectStorageKey","defaultProjectData","TaskEdit","task","save","projectStorage","defaultValue","text","setText","details","setDetails","event","data","target","value","project","projects","map","id","archived","time"],"sources":["/Users/dhs/do-next/src/task/TaskEdit.tsx"],"sourcesContent":["import React, { useState } from 'react'\nimport useLocalStorageState from 'use-local-storage-state'\nimport { ProjectStorageKey } from '../Constants'\nimport { Task } from '../DoData'\nimport { defaultProjectData } from '../storage/Storage'\n\ninterface TaskEditProps {\n    task: Task\n    save: (track: Task) => void\n}\n\nconst TaskEdit = ({ task, save }: TaskEditProps) => {\n    const [projectStorage] = useLocalStorageState(ProjectStorageKey, {\n        defaultValue: defaultProjectData\n    })\n    const [text, setText] = useState(task.text || '')\n    const [details, setDetails] = useState(task.details || '')\n\n    return <div>\n        <label>text:<input\n            defaultValue={text}\n            size={40}\n            onInput={event => {\n                const data = (event.target as HTMLInputElement).value\n                setText(data)\n            }}\n        /></label>\n        <select value={task.project}>\n            <option>No project</option>\n            {projectStorage.projects.map(project =>\n                <option key={'project' + project.id} value={project.id}>\n                    {project.text}\n                </option>\n            )}\n        </select>\n        <br />\n        <label>details:<input\n            defaultValue={details}\n            size={60}\n            onInput={event => {\n                const data = (event.target as HTMLInputElement).value\n                setDetails(data)\n            }}\n        /></label>\n        <br />\n        <button onClick={() => {\n            save({\n                id: task.id,\n                text: text,\n                details: details,\n                archived: task.archived,\n                project: 0,\n                time: 0,\n            })\n        }} >Done</button>\n    </div>\n}\n\nexport default TaskEdit"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;AACA,OAAOC,oBAAP,MAAiC,yBAAjC;AACA,SAASC,iBAAT,QAAkC,cAAlC;AAEA,SAASC,kBAAT,QAAmC,oBAAnC;;;AAOA,MAAMC,QAAQ,GAAG,QAAmC;EAAA;;EAAA,IAAlC;IAAEC,IAAF;IAAQC;EAAR,CAAkC;EAChD,MAAM,CAACC,cAAD,IAAmBN,oBAAoB,CAACC,iBAAD,EAAoB;IAC7DM,YAAY,EAAEL;EAD+C,CAApB,CAA7C;EAGA,MAAM,CAACM,IAAD,EAAOC,OAAP,IAAkBV,QAAQ,CAACK,IAAI,CAACI,IAAL,IAAa,EAAd,CAAhC;EACA,MAAM,CAACE,OAAD,EAAUC,UAAV,IAAwBZ,QAAQ,CAACK,IAAI,CAACM,OAAL,IAAgB,EAAjB,CAAtC;EAEA,oBAAO;IAAA,wBACH;MAAA,iCAAY;QACR,YAAY,EAAEF,IADN;QAER,IAAI,EAAE,EAFE;QAGR,OAAO,EAAEI,KAAK,IAAI;UACd,MAAMC,IAAI,GAAID,KAAK,CAACE,MAAP,CAAmCC,KAAhD;UACAN,OAAO,CAACI,IAAD,CAAP;QACH;MANO;QAAA;QAAA;QAAA;MAAA,QAAZ;IAAA;MAAA;MAAA;MAAA;IAAA,QADG,eASH;MAAQ,KAAK,EAAET,IAAI,CAACY,OAApB;MAAA,wBACI;QAAA;MAAA;QAAA;QAAA;QAAA;MAAA,QADJ,EAEKV,cAAc,CAACW,QAAf,CAAwBC,GAAxB,CAA4BF,OAAO,iBAChC;QAAqC,KAAK,EAAEA,OAAO,CAACG,EAApD;QAAA,UACKH,OAAO,CAACR;MADb,GAAa,YAAYQ,OAAO,CAACG,EAAjC;QAAA;QAAA;QAAA;MAAA,QADH,CAFL;IAAA;MAAA;MAAA;MAAA;IAAA,QATG,eAiBH;MAAA;MAAA;MAAA;IAAA,QAjBG,eAkBH;MAAA,oCAAe;QACX,YAAY,EAAET,OADH;QAEX,IAAI,EAAE,EAFK;QAGX,OAAO,EAAEE,KAAK,IAAI;UACd,MAAMC,IAAI,GAAID,KAAK,CAACE,MAAP,CAAmCC,KAAhD;UACAJ,UAAU,CAACE,IAAD,CAAV;QACH;MANU;QAAA;QAAA;QAAA;MAAA,QAAf;IAAA;MAAA;MAAA;MAAA;IAAA,QAlBG,eA0BH;MAAA;MAAA;MAAA;IAAA,QA1BG,eA2BH;MAAQ,OAAO,EAAE,MAAM;QACnBR,IAAI,CAAC;UACDc,EAAE,EAAEf,IAAI,CAACe,EADR;UAEDX,IAAI,EAAEA,IAFL;UAGDE,OAAO,EAAEA,OAHR;UAIDU,QAAQ,EAAEhB,IAAI,CAACgB,QAJd;UAKDJ,OAAO,EAAE,CALR;UAMDK,IAAI,EAAE;QANL,CAAD,CAAJ;MAQH,CATD;MAAA;IAAA;MAAA;MAAA;MAAA;IAAA,QA3BG;EAAA;IAAA;IAAA;IAAA;EAAA,QAAP;AAsCH,CA7CD;;GAAMlB,Q;UACuBH,oB;;;KADvBG,Q;AA+CN,eAAeA,QAAf"},"metadata":{},"sourceType":"module"}