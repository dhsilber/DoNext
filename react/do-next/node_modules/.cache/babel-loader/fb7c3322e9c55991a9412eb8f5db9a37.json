{"ast":null,"code":"var _jsxFileName = \"/Users/dhs/do-next/src/task/TaskListElement.tsx\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst TaskListElement = _ref => {\n  let {\n    task,\n    setEditTask\n  } = _ref;\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"label\", {\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"checkbox\",\n        onClick: event => {\n          task.archived = true; // task.tasked.unshift( Date.now())\n          // tasker(task) \n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 13,\n        columnNumber: 13\n      }, this), task.text]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 12,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: () => {\n        setEditTask(task);\n      },\n      children: \"&\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 23,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 11,\n    columnNumber: 12\n  }, this);\n};\n\n_c = TaskListElement;\nexport default TaskListElement;\n\nvar _c;\n\n$RefreshReg$(_c, \"TaskListElement\");","map":{"version":3,"names":["TaskListElement","task","setEditTask","event","archived","text"],"sources":["/Users/dhs/do-next/src/task/TaskListElement.tsx"],"sourcesContent":["import { formatDate } from \"../DateUtilities\"\nimport { Task } from \"../DoData\"\n\ninterface TaskListElementProps {\n    task: Task\n    // tasker: (task: Task) => void\n    setEditTask: (task: Task) => void\n}\n\nconst TaskListElement = ({ task, setEditTask }: TaskListElementProps) => {\n    return <div>\n        <label>\n            <input\n                type='checkbox'\n                onClick={(event) => { \n                    task.archived=true\n                    // task.tasked.unshift( Date.now())\n                    // tasker(task) \n                }}\n            />\n            {task.text}\n        </label>\n        <button onClick={() => {setEditTask(task)}} >&amp;</button>\n    </div>\n}\n\nexport default TaskListElement\n"],"mappings":";;;AASA,MAAMA,eAAe,GAAG,QAAiD;EAAA,IAAhD;IAAEC,IAAF;IAAQC;EAAR,CAAgD;EACrE,oBAAO;IAAA,wBACH;MAAA,wBACI;QACI,IAAI,EAAC,UADT;QAEI,OAAO,EAAGC,KAAD,IAAW;UAChBF,IAAI,CAACG,QAAL,GAAc,IAAd,CADgB,CAEhB;UACA;QACH;MANL;QAAA;QAAA;QAAA;MAAA,QADJ,EASKH,IAAI,CAACI,IATV;IAAA;MAAA;MAAA;MAAA;IAAA,QADG,eAYH;MAAQ,OAAO,EAAE,MAAM;QAACH,WAAW,CAACD,IAAD,CAAX;MAAkB,CAA1C;MAAA;IAAA;MAAA;MAAA;MAAA;IAAA,QAZG;EAAA;IAAA;IAAA;IAAA;EAAA,QAAP;AAcH,CAfD;;KAAMD,e;AAiBN,eAAeA,eAAf"},"metadata":{},"sourceType":"module"}