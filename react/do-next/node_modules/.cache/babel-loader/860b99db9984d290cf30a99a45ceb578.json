{"ast":null,"code":"export const projectStore = (project, allProjects, setStore) => {\n  if (project.text.length === 0) {\n    return;\n  }\n\n  const existingProject = allProjects.projects.find(item => item.text === project.text);\n\n  if (existingProject === undefined) {\n    allProjects.projects.push(project);\n  } else {\n    existingProject.minutes = project.minutes;\n  }\n\n  setStore(allProjects);\n};","map":{"version":3,"names":["projectStore","project","allProjects","setStore","text","length","existingProject","projects","find","item","undefined","push","minutes"],"sources":["/Users/dhs/do-next/src/project/ProjectStorage.ts"],"sourcesContent":["import { Project, ProjectSet } from \"../DoData\";\n\nexport const projectStore = (\n    project: Project,\n    allProjects: ProjectSet,\n    setStore: (data: ProjectSet) => void\n) => {\n    if (project.text.length === 0) {\n        return\n    }\n\n    const existingProject = allProjects.projects.find(item => item.text === project.text)\n    if (existingProject === undefined) {\n        allProjects.projects.push(project)\n    }\n    else {\n        existingProject.minutes = project.minutes\n    }\n\n    setStore(allProjects)\n}"],"mappings":"AAEA,OAAO,MAAMA,YAAY,GAAG,CACxBC,OADwB,EAExBC,WAFwB,EAGxBC,QAHwB,KAIvB;EACD,IAAIF,OAAO,CAACG,IAAR,CAAaC,MAAb,KAAwB,CAA5B,EAA+B;IAC3B;EACH;;EAED,MAAMC,eAAe,GAAGJ,WAAW,CAACK,QAAZ,CAAqBC,IAArB,CAA0BC,IAAI,IAAIA,IAAI,CAACL,IAAL,KAAcH,OAAO,CAACG,IAAxD,CAAxB;;EACA,IAAIE,eAAe,KAAKI,SAAxB,EAAmC;IAC/BR,WAAW,CAACK,QAAZ,CAAqBI,IAArB,CAA0BV,OAA1B;EACH,CAFD,MAGK;IACDK,eAAe,CAACM,OAAhB,GAA0BX,OAAO,CAACW,OAAlC;EACH;;EAEDT,QAAQ,CAACD,WAAD,CAAR;AACH,CAlBM"},"metadata":{},"sourceType":"module"}