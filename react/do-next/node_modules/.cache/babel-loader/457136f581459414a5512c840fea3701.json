{"ast":null,"code":"var _jsxFileName = \"/Users/dhs/do-next/src/Notes.tsx\";\nimport React from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst Notes = () => {\n  return /*#__PURE__*/_jsxDEV(\"ul\", {\n    children: [/*#__PURE__*/_jsxDEV(\"li\", {\n      children: \"Need tests for the event code\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 5,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"li\", {\n      children: \"events branch should include showing when each event ends\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 6,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"li\", {\n      children: \"Hide these notes\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 7,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"li\", {\n      children: \"Commit events branch\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 8,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"li\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 9,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"li\", {\n      children: \"Need to make page rerender after midnight\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 10,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"li\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 11,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"li\", {\n      children: \"I would like to mark work as not showing, but instead show time between work and a scheduled event\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 12,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"li\", {\n      children: \"Track bedtime and time for prep and show available time after other events\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 13,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"li\", {\n      children: \"\\\"Refill pill containers\\\" repeats every 10 days\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 14,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"li\", {\n      children: \"The trash/recycling & laundry todos repeat on particular days of the week\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 15,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"li\", {\n      children: \"\\\"Pay rent\\\" occurrs on the first of each month\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 16,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 4,\n    columnNumber: 12\n  }, this);\n};\n\n_c = Notes;\nexport default Notes;\n\nvar _c;\n\n$RefreshReg$(_c, \"Notes\");","map":{"version":3,"names":["React","Notes"],"sources":["/Users/dhs/do-next/src/Notes.tsx"],"sourcesContent":["import React from 'react'\n\nconst Notes = () => {\n    return <ul>\n        <li>Need tests for the event code</li>\n        <li>events branch should include showing when each event ends</li>\n        <li>Hide these notes</li>\n        <li>Commit events branch</li>\n        <li></li>\n        <li>Need to make page rerender after midnight</li>\n        <li></li>\n        <li>I would like to mark work as not showing, but instead show time between work and a scheduled event</li>\n        <li>Track bedtime and time for prep and show available time after other events</li>\n        <li>\"Refill pill containers\" repeats every 10 days</li>\n        <li>The trash/recycling &amp; laundry todos repeat on particular days of the week</li>\n        <li>\"Pay rent\" occurrs on the first of each month</li>\n    </ul>\n}\n\nexport default Notes"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;;;AAEA,MAAMC,KAAK,GAAG,MAAM;EAChB,oBAAO;IAAA,wBACH;MAAA;IAAA;MAAA;MAAA;MAAA;IAAA,QADG,eAEH;MAAA;IAAA;MAAA;MAAA;MAAA;IAAA,QAFG,eAGH;MAAA;IAAA;MAAA;MAAA;MAAA;IAAA,QAHG,eAIH;MAAA;IAAA;MAAA;MAAA;MAAA;IAAA,QAJG,eAKH;MAAA;MAAA;MAAA;IAAA,QALG,eAMH;MAAA;IAAA;MAAA;MAAA;MAAA;IAAA,QANG,eAOH;MAAA;MAAA;MAAA;IAAA,QAPG,eAQH;MAAA;IAAA;MAAA;MAAA;MAAA;IAAA,QARG,eASH;MAAA;IAAA;MAAA;MAAA;MAAA;IAAA,QATG,eAUH;MAAA;IAAA;MAAA;MAAA;MAAA;IAAA,QAVG,eAWH;MAAA;IAAA;MAAA;MAAA;MAAA;IAAA,QAXG,eAYH;MAAA;IAAA;MAAA;MAAA;MAAA;IAAA,QAZG;EAAA;IAAA;IAAA;IAAA;EAAA,QAAP;AAcH,CAfD;;KAAMA,K;AAiBN,eAAeA,KAAf"},"metadata":{},"sourceType":"module"}