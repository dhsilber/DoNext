{"ast":null,"code":"var _jsxFileName = \"/Users/dhs/do-next/src/project/ProjectList.tsx\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nconst ProjectList = _ref => {\n  let {\n    projectSet\n  } = _ref;\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: projectSet.projects.map(project => {\n      return /*#__PURE__*/_jsxDEV(\"label\", {\n        children: [/*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"checkbox\"\n        }, project.text, false, {\n          fileName: _jsxFileName,\n          lineNumber: 10,\n          columnNumber: 27\n        }, this), project.text]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 10,\n        columnNumber: 20\n      }, this);\n    })\n  }, void 0, false);\n};\n\n_c = ProjectList;\nexport default ProjectList;\n\nvar _c;\n\n$RefreshReg$(_c, \"ProjectList\");","map":{"version":3,"names":["ProjectList","projectSet","projects","map","project","text"],"sources":["/Users/dhs/do-next/src/project/ProjectList.tsx"],"sourcesContent":["import { ProjectSet } from \"../DoData\"\n\ninterface ProjectListProps {\n    projectSet: ProjectSet\n}\n\nconst ProjectList = ({ projectSet }: ProjectListProps) => {\n    return <>\n        {projectSet.projects.map((project) => {\n            return <label><input type='checkbox' key={project.text}/>{project.text}</label>\n        })}\n    </>\n}\n\nexport default ProjectList\n"],"mappings":";;;;AAMA,MAAMA,WAAW,GAAG,QAAsC;EAAA,IAArC;IAAEC;EAAF,CAAqC;EACtD,oBAAO;IAAA,UACFA,UAAU,CAACC,QAAX,CAAoBC,GAApB,CAAyBC,OAAD,IAAa;MAClC,oBAAO;QAAA,wBAAO;UAAO,IAAI,EAAC;QAAZ,GAA4BA,OAAO,CAACC,IAApC;UAAA;UAAA;UAAA;QAAA,QAAP,EAAmDD,OAAO,CAACC,IAA3D;MAAA;QAAA;QAAA;QAAA;MAAA,QAAP;IACH,CAFA;EADE,iBAAP;AAKH,CAND;;KAAML,W;AAQN,eAAeA,WAAf"},"metadata":{},"sourceType":"module"}