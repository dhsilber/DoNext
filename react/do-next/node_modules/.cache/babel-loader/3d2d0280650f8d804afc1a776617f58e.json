{"ast":null,"code":"var _jsxFileName = \"/Users/dhs/do-next/src/track/Tracks.tsx\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from 'react';\nimport useLocalStorageState from 'use-local-storage-state';\nimport { TrackStorageKey } from '../Constants';\nimport { defaultTrackData } from '../storage/Storage';\nimport TrackEdit from './TrackEdit';\nimport TrackList from './TrackList';\nimport { trackStore } from './TrackStore';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst emptyTrack = {\n  text: '',\n  tracked: []\n};\n\nconst Tracks = () => {\n  _s();\n\n  const [trackStorage, setTrackStorage] = useLocalStorageState(TrackStorageKey, {\n    defaultValue: defaultTrackData\n  });\n  const [edit, setEdit] = useState(false);\n  const [editTrack, setEditTrack] = useState(emptyTrack);\n\n  const save = track => {\n    setEdit(false);\n    trackStore(track, trackStorage, setTrackStorage);\n  };\n\n  const tracker = track => {\n    trackStore(track, trackStorage, setTrackStorage);\n  };\n\n  const setEditState = track => {\n    setEdit(true);\n    setEditTrack(track);\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"track\",\n    children: [/*#__PURE__*/_jsxDEV(\"b\", {\n      children: \"Track:\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(TrackList, {\n      trackSet: trackStorage,\n      tracker: tracker,\n      setEditTrack: setEditState\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 9\n    }, this), edit && /*#__PURE__*/_jsxDEV(TrackEdit, {\n      track: editTrack,\n      save: save\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 18\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: () => setEdit(true),\n      children: \"+\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 36,\n    columnNumber: 12\n  }, this);\n};\n\n_s(Tracks, \"dzjSa6rLM8YwUdslzRIxqdXl04w=\", false, function () {\n  return [useLocalStorageState];\n});\n\n_c = Tracks;\nexport default Tracks;\n\nvar _c;\n\n$RefreshReg$(_c, \"Tracks\");","map":{"version":3,"names":["React","useState","useLocalStorageState","TrackStorageKey","defaultTrackData","TrackEdit","TrackList","trackStore","emptyTrack","text","tracked","Tracks","trackStorage","setTrackStorage","defaultValue","edit","setEdit","editTrack","setEditTrack","save","track","tracker","setEditState"],"sources":["/Users/dhs/do-next/src/track/Tracks.tsx"],"sourcesContent":["import React, { useState } from 'react'\nimport useLocalStorageState from 'use-local-storage-state'\nimport { TrackStorageKey } from '../Constants'\nimport { Track } from '../DoData'\nimport { defaultTrackData } from '../storage/Storage'\nimport TrackEdit from './TrackEdit'\nimport TrackList from './TrackList'\nimport { trackStore } from './TrackStore'\n\nconst emptyTrack: Track = {\n    text: '',\n    tracked: [],\n}\n\nconst Tracks = () => {\n    const [trackStorage, setTrackStorage] = useLocalStorageState(TrackStorageKey, {\n        defaultValue: defaultTrackData\n    })\n    const [edit, setEdit] = useState(false)\n    const [editTrack, setEditTrack] = useState(emptyTrack)\n\n    const save = (track: Track) => {\n        setEdit(false)\n        trackStore(track, trackStorage, setTrackStorage)\n    }\n\n    const tracker = (track: Track) => {\n        trackStore(track, trackStorage, setTrackStorage)\n    }\n\n    const setEditState = (track: Track) => {\n        setEdit(true)\n        setEditTrack(track)\n    }\n\n    return <div className='track'>\n        <b>Track:</b>\n        <TrackList\n            trackSet={trackStorage}\n            tracker={tracker}\n            setEditTrack={setEditState}\n        />\n        {edit && <TrackEdit track={editTrack} save={save} />}\n        {/* {edit && <TrackEdit project={emptyTrack} save={save} />} */}\n        <button onClick={() => setEdit(true)} >+</button>\n    </div>\n}\n\nexport default Tracks\n"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;AACA,OAAOC,oBAAP,MAAiC,yBAAjC;AACA,SAASC,eAAT,QAAgC,cAAhC;AAEA,SAASC,gBAAT,QAAiC,oBAAjC;AACA,OAAOC,SAAP,MAAsB,aAAtB;AACA,OAAOC,SAAP,MAAsB,aAAtB;AACA,SAASC,UAAT,QAA2B,cAA3B;;AAEA,MAAMC,UAAiB,GAAG;EACtBC,IAAI,EAAE,EADgB;EAEtBC,OAAO,EAAE;AAFa,CAA1B;;AAKA,MAAMC,MAAM,GAAG,MAAM;EAAA;;EACjB,MAAM,CAACC,YAAD,EAAeC,eAAf,IAAkCX,oBAAoB,CAACC,eAAD,EAAkB;IAC1EW,YAAY,EAAEV;EAD4D,CAAlB,CAA5D;EAGA,MAAM,CAACW,IAAD,EAAOC,OAAP,IAAkBf,QAAQ,CAAC,KAAD,CAAhC;EACA,MAAM,CAACgB,SAAD,EAAYC,YAAZ,IAA4BjB,QAAQ,CAACO,UAAD,CAA1C;;EAEA,MAAMW,IAAI,GAAIC,KAAD,IAAkB;IAC3BJ,OAAO,CAAC,KAAD,CAAP;IACAT,UAAU,CAACa,KAAD,EAAQR,YAAR,EAAsBC,eAAtB,CAAV;EACH,CAHD;;EAKA,MAAMQ,OAAO,GAAID,KAAD,IAAkB;IAC9Bb,UAAU,CAACa,KAAD,EAAQR,YAAR,EAAsBC,eAAtB,CAAV;EACH,CAFD;;EAIA,MAAMS,YAAY,GAAIF,KAAD,IAAkB;IACnCJ,OAAO,CAAC,IAAD,CAAP;IACAE,YAAY,CAACE,KAAD,CAAZ;EACH,CAHD;;EAKA,oBAAO;IAAK,SAAS,EAAC,OAAf;IAAA,wBACH;MAAA;IAAA;MAAA;MAAA;MAAA;IAAA,QADG,eAEH,QAAC,SAAD;MACI,QAAQ,EAAER,YADd;MAEI,OAAO,EAAES,OAFb;MAGI,YAAY,EAAEC;IAHlB;MAAA;MAAA;MAAA;IAAA,QAFG,EAOFP,IAAI,iBAAI,QAAC,SAAD;MAAW,KAAK,EAAEE,SAAlB;MAA6B,IAAI,EAAEE;IAAnC;MAAA;MAAA;MAAA;IAAA,QAPN,eASH;MAAQ,OAAO,EAAE,MAAMH,OAAO,CAAC,IAAD,CAA9B;MAAA;IAAA;MAAA;MAAA;MAAA;IAAA,QATG;EAAA;IAAA;IAAA;IAAA;EAAA,QAAP;AAWH,CAhCD;;GAAML,M;UACsCT,oB;;;KADtCS,M;AAkCN,eAAeA,MAAf"},"metadata":{},"sourceType":"module"}