{"ast":null,"code":"var _jsxFileName = \"/Users/dhs/do-next/src/event/EventEdit.tsx\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from 'react';\nimport Entry from './Entry';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst EventEdit = _ref => {\n  _s();\n\n  let {\n    event,\n    save\n  } = _ref;\n  const [text, setText] = useState(event.text || '');\n  const now = new Date();\n  const [year, setYear] = useState(now.getFullYear());\n  const [month, setMonth] = useState(now.getMonth() + 1);\n  const [date, setDate] = useState(now.getDate());\n  const [hours, setHours] = useState(now.getHours()); // console.log(`++now minutes: ${now.getMinutes()}`)\n\n  const [minutes, setMinutes] = useState(now.getMinutes()); // console.log(`++minutes: ${minutes}`)\n  // console.log(`now minutes: ${now.getMinutes()}`)\n\n  const [duration, setDuration] = useState(30);\n  if (minutes >= 60) setMinutes(minutes / 10);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"label\", {\n      children: [\"text:\", /*#__PURE__*/_jsxDEV(\"input\", {\n        value: text,\n        size: 40,\n        onInput: event => {\n          const data = event.target.value;\n          setText(data);\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 26,\n        columnNumber: 21\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 26,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(Entry, {\n      prompt: 'date:',\n      value: year,\n      size: 4,\n      setter: setYear\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(Entry, {\n      prompt: '-',\n      value: month,\n      size: 2,\n      setter: setMonth\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(Entry, {\n      prompt: '-',\n      value: date,\n      size: 2,\n      setter: setDate\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(Entry, {\n      prompt: 'time:',\n      value: hours,\n      size: 2,\n      setter: setHours\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(Entry, {\n      prompt: ':',\n      value: minutes,\n      size: 2,\n      setter: setMinutes\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(Entry, {\n      prompt: 'duration:',\n      value: 30,\n      size: 2,\n      setter: setDuration\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: () => {\n        console.log(`minutes: ${minutes}`);\n        const dateString = `${year}` + `-${String(month).padStart(2, '0')}` + `-${String(date).padStart(2, '0')}` + `T${String(hours).padStart(2, '0')}` + `:${String(minutes).padStart(2, '0')}:00.000Z`;\n        console.log(`Date string: ${dateString}`);\n        const start = Date.parse(dateString);\n        console.log(`Start date: ${new Date(start).toISOString()}`);\n        save({\n          text: text,\n          start: start,\n          duration: 0\n        });\n      },\n      children: \"Done\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 25,\n    columnNumber: 12\n  }, this);\n};\n\n_s(EventEdit, \"iWRHEjiUrZa2u/CZ3kisPkMObbQ=\");\n\n_c = EventEdit;\nexport default EventEdit;\n\nvar _c;\n\n$RefreshReg$(_c, \"EventEdit\");","map":{"version":3,"names":["React","useState","Entry","EventEdit","event","save","text","setText","now","Date","year","setYear","getFullYear","month","setMonth","getMonth","date","setDate","getDate","hours","setHours","getHours","minutes","setMinutes","getMinutes","duration","setDuration","data","target","value","console","log","dateString","String","padStart","start","parse","toISOString"],"sources":["/Users/dhs/do-next/src/event/EventEdit.tsx"],"sourcesContent":["import React, { useState } from 'react'\nimport { Event } from \"../DoData\"\nimport Entry from './Entry'\n\ninterface EventEditProps {\n    event: Event\n    save: (event: Event) => void\n}\n\nconst EventEdit = ({ event, save }: EventEditProps) => {\n    const [text, setText] = useState(event.text || '')\n    const now = new Date()\n    const [year, setYear] = useState(now.getFullYear())\n    const [month, setMonth] = useState(now.getMonth() + 1)\n    const [date, setDate] = useState(now.getDate())\n    const [hours, setHours] = useState(now.getHours())\n    // console.log(`++now minutes: ${now.getMinutes()}`)\n    const [minutes, setMinutes] = useState(now.getMinutes())\n    // console.log(`++minutes: ${minutes}`)\n    // console.log(`now minutes: ${now.getMinutes()}`)\n    const [duration, setDuration] = useState(30)\n\n    if (minutes >= 60) setMinutes(minutes / 10)\n\n    return <div >\n        <label>text:<input\n            value={text}\n            size={40}\n            onInput={event => {\n                const data = (event.target as HTMLInputElement).value\n                setText(data)\n            }}\n        /></label>\n        <br />\n        <Entry prompt={'date:'} value={year} size={4} setter={setYear} />\n        <Entry prompt={'-'} value={month} size={2} setter={setMonth} />\n        <Entry prompt={'-'} value={date} size={2} setter={setDate} />\n        <br />\n        <Entry prompt={'time:'} value={hours} size={2} setter={setHours} />\n        <Entry prompt={':'} value={minutes} size={2} setter={setMinutes} />\n        <br />\n        <Entry prompt={'duration:'} value={30} size={2} setter={setDuration} />\n        <br />\n        <button onClick={() => {\n            console.log(`minutes: ${minutes}`)\n            const dateString = `${year}`\n                + `-${String(month).padStart(2, '0')}`\n                + `-${String(date).padStart(2, '0')}`\n                + `T${String(hours).padStart(2, '0')}`\n                + `:${String(minutes).padStart(2, '0')}:00.000Z`\n            console.log(`Date string: ${dateString}`)\n            const start = Date.parse(dateString)\n            console.log(`Start date: ${new Date(start).toISOString()}`)\n            save(\n                { text: text, start: start, duration: 0, }\n            )\n        }\n        } >Done</button>\n\n    </div>\n}\n\nexport default EventEdit\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}