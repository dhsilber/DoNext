{"ast":null,"code":"var _jsxFileName = \"/Users/dhs/do-next/src/task/Tasks.tsx\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from 'react';\nimport useLocalStorageState from 'use-local-storage-state';\nimport { TaskStorageKey } from '../Constants';\nimport { defaultTaskData } from '../storage/Storage';\nimport TaskEdit from './TaskEdit';\nimport TaskList from './TaskList';\nimport { taskStore } from './TaskStore';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst emptyTask = {\n  id: 0,\n  text: '',\n  details: '',\n  archived: 0\n};\n\nconst Tasks = () => {\n  _s();\n\n  const [taskStorage, setTaskStorage] = useLocalStorageState(TaskStorageKey, {\n    defaultValue: defaultTaskData\n  });\n  const [edit, setEdit] = useState(false);\n  const [editTask, setEditTask] = useState(emptyTask);\n\n  const save = task => {\n    setEdit(false);\n    taskStore(task, taskStorage, setTaskStorage);\n    setEditTask(emptyTask);\n  };\n\n  const setEditState = task => {\n    setEdit(true);\n    setEditTask(task);\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"tasks\",\n    children: [/*#__PURE__*/_jsxDEV(TaskList, {\n      taskSet: taskStorage,\n      save: save,\n      setEditTask: setEditState\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 9\n    }, this), edit && /*#__PURE__*/_jsxDEV(TaskEdit, {\n      task: editTask,\n      save: save\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 18\n    }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: () => setEdit(true),\n      children: \"+\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 35,\n    columnNumber: 12\n  }, this);\n};\n\n_s(Tasks, \"x+DhNgmt0fQIU8xcqVFqk0TAEj0=\", false, function () {\n  return [useLocalStorageState];\n});\n\n_c = Tasks;\nexport default Tasks;\n\nvar _c;\n\n$RefreshReg$(_c, \"Tasks\");","map":{"version":3,"names":["React","useState","useLocalStorageState","TaskStorageKey","defaultTaskData","TaskEdit","TaskList","taskStore","emptyTask","id","text","details","archived","Tasks","taskStorage","setTaskStorage","defaultValue","edit","setEdit","editTask","setEditTask","save","task","setEditState"],"sources":["/Users/dhs/do-next/src/task/Tasks.tsx"],"sourcesContent":["import React, { useState } from 'react'\nimport useLocalStorageState from 'use-local-storage-state'\nimport { TaskStorageKey } from '../Constants'\nimport { Task } from '../DoData'\nimport { defaultTaskData } from '../storage/Storage'\nimport TaskEdit from './TaskEdit'\nimport TaskList from './TaskList'\nimport { taskStore } from './TaskStore'\n\nconst emptyTask: Task = {\n    id: 0,\n    text: '',\n    details: '',\n    archived: 0,\n}\n\nconst Tasks = () => {\n    const [taskStorage, setTaskStorage] = useLocalStorageState(TaskStorageKey, {\n        defaultValue: defaultTaskData\n    })\n    const [edit, setEdit] = useState(false)\n    const [editTask, setEditTask] = useState(emptyTask)\n\n    const save = (task: Task) => {\n        setEdit(false)\n        taskStore(task, taskStorage, setTaskStorage)\n        setEditTask(emptyTask)\n    }\n\n    const setEditState = (task: Task) => {\n        setEdit(true)\n        setEditTask(task)\n    }\n\n    return <div className='tasks'>\n        <TaskList taskSet={taskStorage} save={save} setEditTask={setEditState} />\n        {edit && <TaskEdit task={editTask} save={save} />}\n        <br />\n        <button onClick={() => setEdit(true)} >+</button>\n    </div>\n}\n\nexport default Tasks"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;AACA,OAAOC,oBAAP,MAAiC,yBAAjC;AACA,SAASC,cAAT,QAA+B,cAA/B;AAEA,SAASC,eAAT,QAAgC,oBAAhC;AACA,OAAOC,QAAP,MAAqB,YAArB;AACA,OAAOC,QAAP,MAAqB,YAArB;AACA,SAASC,SAAT,QAA0B,aAA1B;;AAEA,MAAMC,SAAe,GAAG;EACpBC,EAAE,EAAE,CADgB;EAEpBC,IAAI,EAAE,EAFc;EAGpBC,OAAO,EAAE,EAHW;EAIpBC,QAAQ,EAAE;AAJU,CAAxB;;AAOA,MAAMC,KAAK,GAAG,MAAM;EAAA;;EAChB,MAAM,CAACC,WAAD,EAAcC,cAAd,IAAgCb,oBAAoB,CAACC,cAAD,EAAiB;IACvEa,YAAY,EAAEZ;EADyD,CAAjB,CAA1D;EAGA,MAAM,CAACa,IAAD,EAAOC,OAAP,IAAkBjB,QAAQ,CAAC,KAAD,CAAhC;EACA,MAAM,CAACkB,QAAD,EAAWC,WAAX,IAA0BnB,QAAQ,CAACO,SAAD,CAAxC;;EAEA,MAAMa,IAAI,GAAIC,IAAD,IAAgB;IACzBJ,OAAO,CAAC,KAAD,CAAP;IACAX,SAAS,CAACe,IAAD,EAAOR,WAAP,EAAoBC,cAApB,CAAT;IACAK,WAAW,CAACZ,SAAD,CAAX;EACH,CAJD;;EAMA,MAAMe,YAAY,GAAID,IAAD,IAAgB;IACjCJ,OAAO,CAAC,IAAD,CAAP;IACAE,WAAW,CAACE,IAAD,CAAX;EACH,CAHD;;EAKA,oBAAO;IAAK,SAAS,EAAC,OAAf;IAAA,wBACH,QAAC,QAAD;MAAU,OAAO,EAAER,WAAnB;MAAgC,IAAI,EAAEO,IAAtC;MAA4C,WAAW,EAAEE;IAAzD;MAAA;MAAA;MAAA;IAAA,QADG,EAEFN,IAAI,iBAAI,QAAC,QAAD;MAAU,IAAI,EAAEE,QAAhB;MAA0B,IAAI,EAAEE;IAAhC;MAAA;MAAA;MAAA;IAAA,QAFN,eAGH;MAAA;MAAA;MAAA;IAAA,QAHG,eAIH;MAAQ,OAAO,EAAE,MAAMH,OAAO,CAAC,IAAD,CAA9B;MAAA;IAAA;MAAA;MAAA;MAAA;IAAA,QAJG;EAAA;IAAA;IAAA;IAAA;EAAA,QAAP;AAMH,CAxBD;;GAAML,K;UACoCX,oB;;;KADpCW,K;AA0BN,eAAeA,KAAf"},"metadata":{},"sourceType":"module"}