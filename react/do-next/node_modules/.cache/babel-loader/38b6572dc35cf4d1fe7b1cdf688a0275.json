{"ast":null,"code":"import React from'react';import TaskListElement from'./TaskListElement';import{jsx as _jsx}from\"react/jsx-runtime\";import{Fragment as _Fragment}from\"react/jsx-runtime\";var TaskList=function TaskList(_ref){var taskSet=_ref.taskSet,save=_ref.save,setEditTask=_ref.setEditTask;return/*#__PURE__*/_jsx(_Fragment,{children:taskSet.tasks.filter(function(task){return task.archived===0;}).map(function(task){return/*#__PURE__*/_jsx(TaskListElement,{task:task,save:save,setEditTask:setEditTask},'task'+task.id);})});};export default TaskList;","map":{"version":3,"names":["React","TaskListElement","TaskList","taskSet","save","setEditTask","tasks","filter","task","archived","map","id"],"sources":["/Users/dhs/do-next/src/task/TaskList.tsx"],"sourcesContent":["import React from 'react'\nimport { Task, TaskSet } from '../DoData'\nimport TaskListElement from './TaskListElement'\n\ninterface TaskListProps {\n    taskSet: TaskSet\n    save: (task: Task) => void\n    setEditTask: (task: Task) => void\n}\n\nconst TaskList = ({ taskSet, save, setEditTask }: TaskListProps) => {\n    return <>\n        {taskSet.tasks\n            .filter(task => task.archived === 0)\n            .map((task) => {\n                return <TaskListElement\n                    key={'task' + task.id}\n                    task={task}\n                    save={save}\n                    setEditTask={setEditTask}\n                />\n            })}\n    </>\n}\n\nexport default TaskList"],"mappings":"AAAA,MAAOA,MAAP,KAAkB,OAAlB,CAEA,MAAOC,gBAAP,KAA4B,mBAA5B,C,gGAQA,GAAMC,SAAQ,CAAG,QAAXA,SAAW,MAAmD,IAAhDC,QAAgD,MAAhDA,OAAgD,CAAvCC,IAAuC,MAAvCA,IAAuC,CAAjCC,WAAiC,MAAjCA,WAAiC,CAChE,mBAAO,yBACFF,OAAO,CAACG,KAAR,CACIC,MADJ,CACW,SAAAC,IAAI,QAAIA,KAAI,CAACC,QAAL,GAAkB,CAAtB,EADf,EAEIC,GAFJ,CAEQ,SAACF,IAAD,CAAU,CACX,mBAAO,KAAC,eAAD,EAEH,IAAI,CAAEA,IAFH,CAGH,IAAI,CAAEJ,IAHH,CAIH,WAAW,CAAEC,WAJV,EACE,OAASG,IAAI,CAACG,EADhB,CAAP,CAMH,CATJ,CADE,EAAP,CAYH,CAbD,CAeA,cAAeT,SAAf"},"metadata":{},"sourceType":"module"}