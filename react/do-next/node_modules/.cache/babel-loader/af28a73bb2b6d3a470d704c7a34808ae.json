{"ast":null,"code":"import { DayMilliseconds, MinuteMilliseconds } from \"./Constants\";\n\nconst commonDayStart = date => {\n  const nowYear = date.getFullYear();\n  const nowMonthIndex = date.getMonth();\n  const nowMonthDay = date.getDate();\n  const nowTimeZoneOffset = date.getTimezoneOffset() * MinuteMilliseconds;\n  const dayStart = Date.UTC(nowYear, nowMonthIndex, nowMonthDay) + nowTimeZoneOffset;\n  return dayStart;\n};\n\nexport const dayNowStartMilliseconds = () => {\n  const now = new Date();\n  return commonDayStart(now);\n};\nexport const dayTimestampStartMilliseconds = timestamp => {\n  const date = new Date(timestamp);\n  return commonDayStart(date);\n};\nexport const weekStartMilliseconds = () => {\n  const weekStarts = [];\n  const now = new Date();\n  let dayStart = commonDayStart(now);\n  const today = new Date().getDay();\n\n  for (let day = today; day >= 0; day--, dayStart -= DayMilliseconds) {\n    weekStarts[day] = dayStart;\n  }\n\n  for (let day = 6; day > today; day--, dayStart -= DayMilliseconds) {\n    weekStarts[day] = dayStart;\n  }\n\n  return weekStarts;\n};\nexport const datestampToMinute = () => {\n  const now = new Date();\n  const nowYear = now.getFullYear();\n  const nowMonthIndex = now.getMonth();\n  const nowMonthDay = now.getDate();\n  const nowHour = now.getHours();\n  const nowMinute = now.getMinutes();\n  const nowTimeZoneOffset = now.getTimezoneOffset() * MinuteMilliseconds;\n  const dayStart = Date.UTC(nowYear, nowMonthIndex, nowMonthDay, nowHour, nowMinute) + nowTimeZoneOffset;\n  return dayStart;\n};\nexport const formatDate = dateTime => {\n  const year = dateTime.getFullYear() + '';\n  const month = dateTime.getMonth() + 1 + '';\n  const date = dateTime.getDate() + '';\n  const hours = dateTime.getHours() + '';\n  const minutes = dateTime.getMinutes() + '';\n  const dateString = `${year}` + `-${month.padStart(2, '0')}` + `-${date.padStart(2, '0')}` + ` ${hours.padStart(2, '0')}` + `:${minutes.padStart(2, '0')}`;\n  return dateString;\n};","map":{"version":3,"names":["DayMilliseconds","MinuteMilliseconds","commonDayStart","date","nowYear","getFullYear","nowMonthIndex","getMonth","nowMonthDay","getDate","nowTimeZoneOffset","getTimezoneOffset","dayStart","Date","UTC","dayNowStartMilliseconds","now","dayTimestampStartMilliseconds","timestamp","weekStartMilliseconds","weekStarts","today","getDay","day","datestampToMinute","nowHour","getHours","nowMinute","getMinutes","formatDate","dateTime","year","month","hours","minutes","dateString","padStart"],"sources":["/Users/dhs/do-next/src/DateUtilities.ts"],"sourcesContent":["import { DayMilliseconds, MinuteMilliseconds } from \"./Constants\"\n\nconst commonDayStart = (date: Date) => {\n    const nowYear = date.getFullYear()\n    const nowMonthIndex = date.getMonth()\n    const nowMonthDay = date.getDate()\n    const nowTimeZoneOffset = date.getTimezoneOffset() * MinuteMilliseconds\n    const dayStart = Date.UTC(nowYear, nowMonthIndex, nowMonthDay) + nowTimeZoneOffset\n    return dayStart\n}\n\nexport const dayNowStartMilliseconds = () => {\n    const now = new Date()\n    return commonDayStart(now)\n}\n\nexport const dayTimestampStartMilliseconds = (timestamp: number) => {\n    const date = new Date(timestamp)\n    return commonDayStart(date)\n}\n\nexport const weekStartMilliseconds = (): number[] => {\n    const weekStarts: number[] = []\n    const now = new Date()\n    let dayStart = commonDayStart(now)\n    const today = new Date().getDay()\n    for (let day = today; day >= 0; day--, dayStart -= DayMilliseconds) {\n        weekStarts[day] = dayStart\n    }\n    for (let day = 6; day > today; day--, dayStart -= DayMilliseconds) {\n        weekStarts[day] = dayStart\n    }\n\n    return weekStarts\n}\n\nexport const datestampToMinute = (): number => {\n    const now = new Date()\n    const nowYear = now.getFullYear()\n    const nowMonthIndex = now.getMonth()\n    const nowMonthDay = now.getDate()\n    const nowHour = now.getHours()\n    const nowMinute = now.getMinutes()\n    const nowTimeZoneOffset = now.getTimezoneOffset() * MinuteMilliseconds\n    const dayStart = Date.UTC(nowYear, nowMonthIndex, nowMonthDay, nowHour, nowMinute) + nowTimeZoneOffset\n    return dayStart\n}\n\nexport const formatDate = (dateTime: Date) => {\n    const year = dateTime.getFullYear() + ''\n    const month = (dateTime.getMonth() + 1) + ''\n    const date = dateTime.getDate() + ''\n    const hours = dateTime.getHours() + ''\n    const minutes = dateTime.getMinutes() + ''\n\n    const dateString = `${year}`\n        + `-${month.padStart(2, '0')}`\n        + `-${date.padStart(2, '0')}`\n        + ` ${hours.padStart(2, '0')}`\n        + `:${minutes.padStart(2, '0')}`\n    return dateString\n}\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}