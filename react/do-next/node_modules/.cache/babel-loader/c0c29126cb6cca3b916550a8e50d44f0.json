{"ast":null,"code":"var _jsxFileName = \"/Users/dhs/do-next/src/track/TrackEdit.tsx\";\nimport React from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nconst TrackEdit = () => {\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"label\", {\n      children: [\"text:\", /*#__PURE__*/_jsxDEV(\"input\", {\n        // value={text}\n        size: 40,\n        onInput: event => {\n          const data = event.target.value; // setText(data)\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 5,\n        columnNumber: 21\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 5,\n      columnNumber: 9\n    }, this), \"Done\"]\n  }, void 0, true);\n};\n\n_c = TrackEdit;\nexport default TrackEdit;\n\nvar _c;\n\n$RefreshReg$(_c, \"TrackEdit\");","map":{"version":3,"names":["React","TrackEdit","event","data","target","value"],"sources":["/Users/dhs/do-next/src/track/TrackEdit.tsx"],"sourcesContent":["import React, { useState } from 'react'\n\nconst TrackEdit=()=>{\n    return<>\n        <label>text:<input\n            // value={text}\n            size={40}\n            onInput={event => {\n                const data = (event.target as HTMLInputElement).value\n                // setText(data)\n            }}\n        /></label>\n    Done\n    </>\n}\n\nexport default TrackEdit\n"],"mappings":";AAAA,OAAOA,KAAP,MAAgC,OAAhC;;;;AAEA,MAAMC,SAAS,GAAC,MAAI;EAChB,oBAAM;IAAA,wBACF;MAAA,iCAAY;QACR;QACA,IAAI,EAAE,EAFE;QAGR,OAAO,EAAEC,KAAK,IAAI;UACd,MAAMC,IAAI,GAAID,KAAK,CAACE,MAAP,CAAmCC,KAAhD,CADc,CAEd;QACH;MANO;QAAA;QAAA;QAAA;MAAA,QAAZ;IAAA;MAAA;MAAA;MAAA;IAAA,QADE;EAAA,gBAAN;AAWH,CAZD;;KAAMJ,S;AAcN,eAAeA,SAAf"},"metadata":{},"sourceType":"module"}