{"ast":null,"code":"var _jsxFileName = \"/Users/dhs/do-next/src/task/Tasks.tsx\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from 'react';\nimport useLocalStorageState from 'use-local-storage-state';\nimport { TaskStorageKey } from '../Constants';\nimport { defaultTaskData } from '../storage/Storage';\nimport TaskEdit from './TaskEdit';\nimport TaskList from './TaskList';\nimport { taskStore } from './TaskStore';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst emptyTask = {\n  text: '',\n  details: ''\n};\n\nconst Tasks = () => {\n  _s();\n\n  const [taskStorage, setTaskStorage] = useLocalStorageState(TaskStorageKey, {\n    defaultValue: defaultTaskData\n  });\n  const [edit, setEdit] = useState(false);\n  const [editTask, setEditTask] = useState(emptyTask);\n\n  const save = task => {\n    setEdit(false);\n    taskStore(task, taskStorage, setTaskStorage);\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"tasks\",\n    children: [/*#__PURE__*/_jsxDEV(TaskList, {\n      taskSet: taskStorage\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 9\n    }, this), edit && /*#__PURE__*/_jsxDEV(TaskEdit, {\n      task: editTask,\n      save: save\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 18\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: () => setEdit(true),\n      children: \"+\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 27,\n    columnNumber: 12\n  }, this);\n};\n\n_s(Tasks, \"x+DhNgmt0fQIU8xcqVFqk0TAEj0=\", false, function () {\n  return [useLocalStorageState];\n});\n\n_c = Tasks;\nexport default Tasks;\n\nvar _c;\n\n$RefreshReg$(_c, \"Tasks\");","map":{"version":3,"names":["React","useState","useLocalStorageState","TaskStorageKey","defaultTaskData","TaskEdit","TaskList","taskStore","emptyTask","text","details","Tasks","taskStorage","setTaskStorage","defaultValue","edit","setEdit","editTask","setEditTask","save","task"],"sources":["/Users/dhs/do-next/src/task/Tasks.tsx"],"sourcesContent":["import React, { useState } from 'react'\nimport useLocalStorageState from 'use-local-storage-state'\nimport { TaskStorageKey } from '../Constants'\nimport { Task } from '../DoData'\nimport { defaultTaskData } from '../storage/Storage'\nimport TaskEdit from './TaskEdit'\nimport TaskList from './TaskList'\nimport { taskStore } from './TaskStore'\n\nconst emptyTask: Task = {\n    text: '',\n    details: '',\n}\n\nconst Tasks = () => {\n    const [taskStorage, setTaskStorage] = useLocalStorageState(TaskStorageKey, {\n        defaultValue: defaultTaskData\n    })\n    const [edit, setEdit] = useState(false)\n    const [editTask, setEditTask] = useState(emptyTask)\n\n    const save = (task: Task) => {\n        setEdit(false)\n        taskStore(task, taskStorage, setTaskStorage)\n    }\n\n    return <div className='tasks'>\n        <TaskList taskSet={taskStorage} />\n        {edit && <TaskEdit task={editTask} save={save} />}\n        <button onClick={() => setEdit(true)} >+</button>\n    </div>\n}\n\nexport default Tasks"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;AACA,OAAOC,oBAAP,MAAiC,yBAAjC;AACA,SAASC,cAAT,QAA+B,cAA/B;AAEA,SAASC,eAAT,QAAgC,oBAAhC;AACA,OAAOC,QAAP,MAAqB,YAArB;AACA,OAAOC,QAAP,MAAqB,YAArB;AACA,SAASC,SAAT,QAA0B,aAA1B;;AAEA,MAAMC,SAAe,GAAG;EACpBC,IAAI,EAAE,EADc;EAEpBC,OAAO,EAAE;AAFW,CAAxB;;AAKA,MAAMC,KAAK,GAAG,MAAM;EAAA;;EAChB,MAAM,CAACC,WAAD,EAAcC,cAAd,IAAgCX,oBAAoB,CAACC,cAAD,EAAiB;IACvEW,YAAY,EAAEV;EADyD,CAAjB,CAA1D;EAGA,MAAM,CAACW,IAAD,EAAOC,OAAP,IAAkBf,QAAQ,CAAC,KAAD,CAAhC;EACA,MAAM,CAACgB,QAAD,EAAWC,WAAX,IAA0BjB,QAAQ,CAACO,SAAD,CAAxC;;EAEA,MAAMW,IAAI,GAAIC,IAAD,IAAgB;IACzBJ,OAAO,CAAC,KAAD,CAAP;IACAT,SAAS,CAACa,IAAD,EAAOR,WAAP,EAAoBC,cAApB,CAAT;EACH,CAHD;;EAKA,oBAAO;IAAK,SAAS,EAAC,OAAf;IAAA,wBACH,QAAC,QAAD;MAAU,OAAO,EAAED;IAAnB;MAAA;MAAA;MAAA;IAAA,QADG,EAEFG,IAAI,iBAAI,QAAC,QAAD;MAAU,IAAI,EAAEE,QAAhB;MAA0B,IAAI,EAAEE;IAAhC;MAAA;MAAA;MAAA;IAAA,QAFN,eAGH;MAAQ,OAAO,EAAE,MAAMH,OAAO,CAAC,IAAD,CAA9B;MAAA;IAAA;MAAA;MAAA;MAAA;IAAA,QAHG;EAAA;IAAA;IAAA;IAAA;EAAA,QAAP;AAKH,CAjBD;;GAAML,K;UACoCT,oB;;;KADpCS,K;AAmBN,eAAeA,KAAf"},"metadata":{},"sourceType":"module"}