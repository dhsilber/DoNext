{"ast":null,"code":"const NO_ELEMENT_FOUND = -1;\nexport const taskStore = (task, allTasks, setStore) => {\n  if (task.text.length === 0) {\n    return;\n  } // const existingTask = allTasks.tasks\n  //     .find(item => item.text === task.text)\n  // if (existingTask === undefined) {\n  //     allTasks.tasks.push(task)\n  // }\n\n\n  const existingTaskIndex = allTasks.tasks.findIndex(item => item.text === task.text);\n\n  if (existingTaskIndex === NO_ELEMENT_FOUND) {\n    allTasks.tasks.push(task);\n  } else {\n    allTasks.tasks.splice(existingTaskIndex, 1, task);\n  }\n\n  setStore(allTasks);\n};","map":{"version":3,"names":["NO_ELEMENT_FOUND","taskStore","task","allTasks","setStore","text","length","existingTaskIndex","tasks","findIndex","item","push","splice"],"sources":["/Users/dhs/do-next/src/task/TaskStore.ts"],"sourcesContent":["import { Task, TaskSet } from '../DoData';\n\nconst NO_ELEMENT_FOUND = -1\n\nexport const taskStore = (\n    task: Task,\n    allTasks: TaskSet,\n    setStore: (data: TaskSet) => void\n) => {\n    if (task.text.length === 0) {\n        return\n    }\n\n    // const existingTask = allTasks.tasks\n    //     .find(item => item.text === task.text)\n    // if (existingTask === undefined) {\n    //     allTasks.tasks.push(task)\n    // }\n\n    const existingTaskIndex = allTasks.tasks\n        .findIndex(item => item.text === task.text)\n    if (existingTaskIndex === NO_ELEMENT_FOUND) {\n        allTasks.tasks.push(task)\n    }\n    else {\n        allTasks.tasks.splice(existingTaskIndex, 1, task)\n    }\n\n    setStore(allTasks)\n}\n"],"mappings":"AAEA,MAAMA,gBAAgB,GAAG,CAAC,CAA1B;AAEA,OAAO,MAAMC,SAAS,GAAG,CACrBC,IADqB,EAErBC,QAFqB,EAGrBC,QAHqB,KAIpB;EACD,IAAIF,IAAI,CAACG,IAAL,CAAUC,MAAV,KAAqB,CAAzB,EAA4B;IACxB;EACH,CAHA,CAKD;EACA;EACA;EACA;EACA;;;EAEA,MAAMC,iBAAiB,GAAGJ,QAAQ,CAACK,KAAT,CACrBC,SADqB,CACXC,IAAI,IAAIA,IAAI,CAACL,IAAL,KAAcH,IAAI,CAACG,IADhB,CAA1B;;EAEA,IAAIE,iBAAiB,KAAKP,gBAA1B,EAA4C;IACxCG,QAAQ,CAACK,KAAT,CAAeG,IAAf,CAAoBT,IAApB;EACH,CAFD,MAGK;IACDC,QAAQ,CAACK,KAAT,CAAeI,MAAf,CAAsBL,iBAAtB,EAAyC,CAAzC,EAA4CL,IAA5C;EACH;;EAEDE,QAAQ,CAACD,QAAD,CAAR;AACH,CAzBM"},"metadata":{},"sourceType":"module"}