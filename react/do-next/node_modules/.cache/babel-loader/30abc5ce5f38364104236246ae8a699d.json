{"ast":null,"code":"var _jsxFileName = \"/Users/dhs/do-next/src/track/Tracks.tsx\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from 'react';\nimport TrackEdit from './TrackEdit';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nconst Tracks = () => {\n  _s();\n\n  const [edit, setEdit] = useState(false);\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [edit && /*#__PURE__*/_jsxDEV(TrackEdit, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 8,\n      columnNumber: 18\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: () => setEdit(true),\n      children: \"+\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 10,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true);\n};\n\n_s(Tracks, \"XWuH1s0cPjelCjvJiiBBkLvdpaI=\");\n\n_c = Tracks;\nexport default Tracks;\n\nvar _c;\n\n$RefreshReg$(_c, \"Tracks\");","map":{"version":3,"names":["React","useState","TrackEdit","Tracks","edit","setEdit"],"sources":["/Users/dhs/do-next/src/track/Tracks.tsx"],"sourcesContent":["import React, { useState } from 'react'\nimport TrackEdit from './TrackEdit'\n\nconst Tracks = () => {\n    const [edit, setEdit] = useState(false)\n    \n    return <>\n        {edit && <TrackEdit />}\n        {/* {edit && <TrackEdit project={emptyTrack} save={save} />} */}\n        <button onClick={() => setEdit(true)} >+</button>\n    </>\n}\n\nexport default Tracks\n"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;AACA,OAAOC,SAAP,MAAsB,aAAtB;;;;AAEA,MAAMC,MAAM,GAAG,MAAM;EAAA;;EACjB,MAAM,CAACC,IAAD,EAAOC,OAAP,IAAkBJ,QAAQ,CAAC,KAAD,CAAhC;EAEA,oBAAO;IAAA,WACFG,IAAI,iBAAI,QAAC,SAAD;MAAA;MAAA;MAAA;IAAA,QADN,eAGH;MAAQ,OAAO,EAAE,MAAMC,OAAO,CAAC,IAAD,CAA9B;MAAA;IAAA;MAAA;MAAA;MAAA;IAAA,QAHG;EAAA,gBAAP;AAKH,CARD;;GAAMF,M;;KAAAA,M;AAUN,eAAeA,MAAf"},"metadata":{},"sourceType":"module"}