{"ast":null,"code":"var _jsxFileName = \"/Users/dhs/do-next/src/project/ProjectEdit.tsx\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from 'react';\nimport { MinuteMilliseconds } from '../Constants';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst datestampToMinute = () => {\n  const now = new Date();\n  const nowYear = now.getFullYear();\n  const nowMonthIndex = now.getMonth();\n  const nowMonthDay = now.getDate();\n  const nowHour = now.getHours();\n  const nowMinute = now.getMinutes();\n  const nowTimeZoneOffset = now.getTimezoneOffset() * MinuteMilliseconds;\n  const dayStart = Date.UTC(nowYear, nowMonthIndex, nowMonthDay, nowHour, nowMinute) + nowTimeZoneOffset;\n  return dayStart;\n};\n\nconst ProjectEdit = _ref => {\n  _s();\n\n  let {\n    project,\n    save\n  } = _ref;\n  const [text, setText] = useState(project.text);\n  const beginning = project.beginning || datestampToMinute();\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"label\", {\n      children: [\"text:\", /*#__PURE__*/_jsxDEV(\"input\", {\n        onInput: event => {\n          const data = event.target.value;\n          setText(data);\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 29,\n        columnNumber: 21\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n      children: [\"beginning:\", /*#__PURE__*/_jsxDEV(\"input\", {\n        readOnly: true\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 34,\n        columnNumber: 26\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: () => save({\n        text: text,\n        beginning: beginning\n      }),\n      children: \"Done\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 28,\n    columnNumber: 12\n  }, this);\n};\n\n_s(ProjectEdit, \"FWKzCz7BNNoUbGocyuAiD7DVEEU=\");\n\n_c = ProjectEdit;\nexport default ProjectEdit;\n\nvar _c;\n\n$RefreshReg$(_c, \"ProjectEdit\");","map":{"version":3,"names":["React","useState","MinuteMilliseconds","datestampToMinute","now","Date","nowYear","getFullYear","nowMonthIndex","getMonth","nowMonthDay","getDate","nowHour","getHours","nowMinute","getMinutes","nowTimeZoneOffset","getTimezoneOffset","dayStart","UTC","ProjectEdit","project","save","text","setText","beginning","event","data","target","value"],"sources":["/Users/dhs/do-next/src/project/ProjectEdit.tsx"],"sourcesContent":["import React, { useState } from 'react'\nimport { text } from 'stream/consumers'\nimport { MinuteMilliseconds } from '../Constants'\nimport { ProjectData } from \"../DoData\"\n\nconst datestampToMinute = (): number => {\n    const now = new Date()\n\n    const nowYear = now.getFullYear()\n    const nowMonthIndex = now.getMonth()\n    const nowMonthDay = now.getDate()\n    const nowHour = now.getHours()\n    const nowMinute = now.getMinutes()\n    const nowTimeZoneOffset = now.getTimezoneOffset() * MinuteMilliseconds\n    const dayStart = Date.UTC(nowYear, nowMonthIndex, nowMonthDay, nowHour, nowMinute) + nowTimeZoneOffset\n    return dayStart\n}\n\ninterface ProjectEditProps {\n    project: ProjectData\n    save: (project: ProjectData) => void\n}\n\nconst ProjectEdit = ({ project, save }: ProjectEditProps) => {\n    const [text, setText] = useState(project.text)\n    const beginning = project.beginning || datestampToMinute()\n\n    return <div >\n        <label>text:<input onInput={event => {\n            const data = (event.target as HTMLInputElement).value\n            setText(data)\n        }} /></label>\n        <br />\n        <label>beginning:<input readOnly/></label>\n        <button onClick={() => save({ text: text, beginning: beginning })} >Done</button>\n\n    </div>\n}\n\nexport default ProjectEdit\n"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;AAEA,SAASC,kBAAT,QAAmC,cAAnC;;;AAGA,MAAMC,iBAAiB,GAAG,MAAc;EACpC,MAAMC,GAAG,GAAG,IAAIC,IAAJ,EAAZ;EAEA,MAAMC,OAAO,GAAGF,GAAG,CAACG,WAAJ,EAAhB;EACA,MAAMC,aAAa,GAAGJ,GAAG,CAACK,QAAJ,EAAtB;EACA,MAAMC,WAAW,GAAGN,GAAG,CAACO,OAAJ,EAApB;EACA,MAAMC,OAAO,GAAGR,GAAG,CAACS,QAAJ,EAAhB;EACA,MAAMC,SAAS,GAAGV,GAAG,CAACW,UAAJ,EAAlB;EACA,MAAMC,iBAAiB,GAAGZ,GAAG,CAACa,iBAAJ,KAA0Bf,kBAApD;EACA,MAAMgB,QAAQ,GAAGb,IAAI,CAACc,GAAL,CAASb,OAAT,EAAkBE,aAAlB,EAAiCE,WAAjC,EAA8CE,OAA9C,EAAuDE,SAAvD,IAAoEE,iBAArF;EACA,OAAOE,QAAP;AACH,CAXD;;AAkBA,MAAME,WAAW,GAAG,QAAyC;EAAA;;EAAA,IAAxC;IAAEC,OAAF;IAAWC;EAAX,CAAwC;EACzD,MAAM,CAACC,IAAD,EAAOC,OAAP,IAAkBvB,QAAQ,CAACoB,OAAO,CAACE,IAAT,CAAhC;EACA,MAAME,SAAS,GAAGJ,OAAO,CAACI,SAAR,IAAqBtB,iBAAiB,EAAxD;EAEA,oBAAO;IAAA,wBACH;MAAA,iCAAY;QAAO,OAAO,EAAEuB,KAAK,IAAI;UACjC,MAAMC,IAAI,GAAID,KAAK,CAACE,MAAP,CAAmCC,KAAhD;UACAL,OAAO,CAACG,IAAD,CAAP;QACH;MAHW;QAAA;QAAA;QAAA;MAAA,QAAZ;IAAA;MAAA;MAAA;MAAA;IAAA,QADG,eAKH;MAAA;MAAA;MAAA;IAAA,QALG,eAMH;MAAA,sCAAiB;QAAO,QAAQ;MAAf;QAAA;QAAA;QAAA;MAAA,QAAjB;IAAA;MAAA;MAAA;MAAA;IAAA,QANG,eAOH;MAAQ,OAAO,EAAE,MAAML,IAAI,CAAC;QAAEC,IAAI,EAAEA,IAAR;QAAcE,SAAS,EAAEA;MAAzB,CAAD,CAA3B;MAAA;IAAA;MAAA;MAAA;MAAA;IAAA,QAPG;EAAA;IAAA;IAAA;IAAA;EAAA,QAAP;AAUH,CAdD;;GAAML,W;;KAAAA,W;AAgBN,eAAeA,WAAf"},"metadata":{},"sourceType":"module"}