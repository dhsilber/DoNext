{"ast":null,"code":"var _jsxFileName = \"/Users/dhs/do-next/src/task/TaskListElement.tsx\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst TaskListElement = _ref => {\n  let {\n    task,\n    save,\n    setEditTask\n  } = _ref;\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"label\", {\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"checkbox\",\n        onClick: event => {\n          task.archived = true;\n          save(task);\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 13,\n        columnNumber: 13\n      }, this), task.text + ' ']\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 12,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: () => {\n        setEditTask(task);\n      },\n      children: \"&\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 22,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 11,\n    columnNumber: 12\n  }, this);\n};\n\n_c = TaskListElement;\nexport default TaskListElement;\n\nvar _c;\n\n$RefreshReg$(_c, \"TaskListElement\");","map":{"version":3,"names":["TaskListElement","task","save","setEditTask","event","archived","text"],"sources":["/Users/dhs/do-next/src/task/TaskListElement.tsx"],"sourcesContent":["import { formatDate } from \"../DateUtilities\"\nimport { Task } from \"../DoData\"\n\ninterface TaskListElementProps {\n    task: Task\n    save: (task: Task) => void\n    setEditTask: (task: Task) => void\n}\n\nconst TaskListElement = ({ task, save, setEditTask }: TaskListElementProps) => {\n    return <div>\n        <label>\n            <input\n                type='checkbox'\n                onClick={(event) => {\n                    task.archived = true\n                    save(task)\n                }}\n            />\n            {task.text + ' '}\n        </label>\n        <button onClick={() => { setEditTask(task) }} >&amp;</button>\n    </div>\n}\n\nexport default TaskListElement\n"],"mappings":";;;AASA,MAAMA,eAAe,GAAG,QAAuD;EAAA,IAAtD;IAAEC,IAAF;IAAQC,IAAR;IAAcC;EAAd,CAAsD;EAC3E,oBAAO;IAAA,wBACH;MAAA,wBACI;QACI,IAAI,EAAC,UADT;QAEI,OAAO,EAAGC,KAAD,IAAW;UAChBH,IAAI,CAACI,QAAL,GAAgB,IAAhB;UACAH,IAAI,CAACD,IAAD,CAAJ;QACH;MALL;QAAA;QAAA;QAAA;MAAA,QADJ,EAQKA,IAAI,CAACK,IAAL,GAAY,GARjB;IAAA;MAAA;MAAA;MAAA;IAAA,QADG,eAWH;MAAQ,OAAO,EAAE,MAAM;QAAEH,WAAW,CAACF,IAAD,CAAX;MAAmB,CAA5C;MAAA;IAAA;MAAA;MAAA;MAAA;IAAA,QAXG;EAAA;IAAA;IAAA;IAAA;EAAA,QAAP;AAaH,CAdD;;KAAMD,e;AAgBN,eAAeA,eAAf"},"metadata":{},"sourceType":"module"}