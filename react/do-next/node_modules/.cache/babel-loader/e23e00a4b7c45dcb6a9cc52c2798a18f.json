{"ast":null,"code":"import { NO_ELEMENT_FOUND } from \"../Constants\";\nexport const projectStore = (project, allProjects, setStore) => {\n  if (project.text.length === 0) {\n    return;\n  }\n\n  if (project.id === 0) {\n    project.id = allProjects.last_id + 1;\n    allProjects.projects.push(project);\n    allProjects.last_id += 1;\n  } else {\n    const existingProjectIndex = allProjects.projects.findIndex(item => item.id === project.id);\n\n    if (existingProjectIndex === NO_ELEMENT_FOUND) {\n      project.id = 0;\n      projectStore(project, allProjects, setStore);\n      return;\n    } else {\n      allProjects.projects.splice(existingProjectIndex, 1, project);\n    }\n  } // const existingProject = allProjects.projects.find(item => item.text === project.text)\n  // if (existingProject === undefined) {\n  //     allProjects.projects.push(project)\n  // }\n  // else {\n  //     existingProject.minutes = project.minutes\n  // }\n\n\n  setStore(allProjects);\n};","map":{"version":3,"names":["NO_ELEMENT_FOUND","projectStore","project","allProjects","setStore","text","length","id","last_id","projects","push","existingProjectIndex","findIndex","item","splice"],"sources":["/Users/dhs/do-next/src/project/ProjectStore.ts"],"sourcesContent":["import { NO_ELEMENT_FOUND } from \"../Constants\";\nimport { Project, ProjectSet } from \"../DoData\";\n\nexport const projectStore = (\n    project: Project,\n    allProjects: ProjectSet,\n    setStore: (data: ProjectSet) => void\n) => {\n    if (project.text.length === 0) {\n        return\n    }\n\n    if (project.id === 0) {\n        project.id = allProjects.last_id + 1\n        allProjects.projects.push(project)\n        allProjects.last_id += 1\n    }\n    else {\n        const existingProjectIndex = allProjects.projects\n            .findIndex(item => item.id === project.id)\n        if (existingProjectIndex === NO_ELEMENT_FOUND) {\n            project.id = 0\n            projectStore(project, allProjects, setStore)\n            return\n        }\n        else {\n            allProjects.projects.splice(existingProjectIndex, 1, project)\n        }\n    }\n\n    // const existingProject = allProjects.projects.find(item => item.text === project.text)\n    // if (existingProject === undefined) {\n    //     allProjects.projects.push(project)\n    // }\n    // else {\n    //     existingProject.minutes = project.minutes\n    // }\n\n    setStore(allProjects)\n}\n"],"mappings":"AAAA,SAASA,gBAAT,QAAiC,cAAjC;AAGA,OAAO,MAAMC,YAAY,GAAG,CACxBC,OADwB,EAExBC,WAFwB,EAGxBC,QAHwB,KAIvB;EACD,IAAIF,OAAO,CAACG,IAAR,CAAaC,MAAb,KAAwB,CAA5B,EAA+B;IAC3B;EACH;;EAED,IAAIJ,OAAO,CAACK,EAAR,KAAe,CAAnB,EAAsB;IAClBL,OAAO,CAACK,EAAR,GAAaJ,WAAW,CAACK,OAAZ,GAAsB,CAAnC;IACAL,WAAW,CAACM,QAAZ,CAAqBC,IAArB,CAA0BR,OAA1B;IACAC,WAAW,CAACK,OAAZ,IAAuB,CAAvB;EACH,CAJD,MAKK;IACD,MAAMG,oBAAoB,GAAGR,WAAW,CAACM,QAAZ,CACxBG,SADwB,CACdC,IAAI,IAAIA,IAAI,CAACN,EAAL,KAAYL,OAAO,CAACK,EADd,CAA7B;;IAEA,IAAII,oBAAoB,KAAKX,gBAA7B,EAA+C;MAC3CE,OAAO,CAACK,EAAR,GAAa,CAAb;MACAN,YAAY,CAACC,OAAD,EAAUC,WAAV,EAAuBC,QAAvB,CAAZ;MACA;IACH,CAJD,MAKK;MACDD,WAAW,CAACM,QAAZ,CAAqBK,MAArB,CAA4BH,oBAA5B,EAAkD,CAAlD,EAAqDT,OAArD;IACH;EACJ,CArBA,CAuBD;EACA;EACA;EACA;EACA;EACA;EACA;;;EAEAE,QAAQ,CAACD,WAAD,CAAR;AACH,CApCM"},"metadata":{},"sourceType":"module"}