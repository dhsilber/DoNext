{"ast":null,"code":"import{formatDate}from\"../DateUtilities\";import{jsx as _jsx}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";var TrackListElement=function TrackListElement(_ref){var track=_ref.track,tracker=_ref.tracker,setEditTrack=_ref.setEditTrack;// const message = ` ${track.minutes} minutes since ${new Date(track.beginning).toISOString().split('T')[0]}`\nvar hasTimestamps=track.tracked.length>0;var lastTimestamp=(hasTimestamps?formatDate(new Date(track.tracked[0])):'')+' ';return/*#__PURE__*/_jsxs(\"div\",{children:[/*#__PURE__*/_jsxs(\"label\",{children:[/*#__PURE__*/_jsx(\"input\",{type:\"checkbox\",onClick:function onClick(event){track.tracked.unshift(Date.now());tracker(track);}}),track.text]}),hasTimestamps&&/*#__PURE__*/_jsx(\"span\",{children:\" - last at: \"}),/*#__PURE__*/_jsx(\"span\",{children:lastTimestamp}),/*#__PURE__*/_jsx(\"button\",{onClick:function onClick(){setEditTrack(track);},children:\"&\"})]});};export default TrackListElement;","map":{"version":3,"names":["formatDate","TrackListElement","track","tracker","setEditTrack","hasTimestamps","tracked","length","lastTimestamp","Date","event","unshift","now","text"],"sources":["/Users/dhs/do-next/src/track/TrackListElement.tsx"],"sourcesContent":["import { formatDate } from \"../DateUtilities\"\nimport { Track } from \"../DoData\"\n\ninterface TrackListElementProps {\n    track: Track\n    tracker: (track: Track) => void\n    setEditTrack: (track: Track) => void\n}\n\nconst TrackListElement = ({ track, tracker, setEditTrack }: TrackListElementProps) => {\n    // const message = ` ${track.minutes} minutes since ${new Date(track.beginning).toISOString().split('T')[0]}`\n    const hasTimestamps = track.tracked.length > 0\n    const lastTimestamp = (hasTimestamps ? formatDate(new Date(track.tracked[0])) : '') + ' '\n    return <div>\n        <label>\n            <input\n                type='checkbox'\n                onClick={(event) => { \n                    track.tracked.unshift( Date.now())\n                    tracker(track) \n                }}\n            />\n            {track.text}\n        </label>\n        {hasTimestamps && <span> - last at: </span>}\n        <span>{lastTimestamp}</span>\n        <button onClick={() => {setEditTrack(track)}} >&amp;</button>\n    </div>\n}\n\nexport default TrackListElement\n"],"mappings":"AAAA,OAASA,UAAT,KAA2B,kBAA3B,C,wFASA,GAAMC,iBAAgB,CAAG,QAAnBA,iBAAmB,MAA6D,IAA1DC,MAA0D,MAA1DA,KAA0D,CAAnDC,OAAmD,MAAnDA,OAAmD,CAA1CC,YAA0C,MAA1CA,YAA0C,CAClF;AACA,GAAMC,cAAa,CAAGH,KAAK,CAACI,OAAN,CAAcC,MAAd,CAAuB,CAA7C,CACA,GAAMC,cAAa,CAAG,CAACH,aAAa,CAAGL,UAAU,CAAC,GAAIS,KAAJ,CAASP,KAAK,CAACI,OAAN,CAAc,CAAd,CAAT,CAAD,CAAb,CAA4C,EAA1D,EAAgE,GAAtF,CACA,mBAAO,oCACH,sCACI,cACI,IAAI,CAAC,UADT,CAEI,OAAO,CAAE,iBAACI,KAAD,CAAW,CAChBR,KAAK,CAACI,OAAN,CAAcK,OAAd,CAAuBF,IAAI,CAACG,GAAL,EAAvB,EACAT,OAAO,CAACD,KAAD,CAAP,CACH,CALL,EADJ,CAQKA,KAAK,CAACW,IARX,GADG,CAWFR,aAAa,eAAI,sCAXf,cAYH,sBAAOG,aAAP,EAZG,cAaH,eAAQ,OAAO,CAAE,kBAAM,CAACJ,YAAY,CAACF,KAAD,CAAZ,CAAoB,CAA5C,eAbG,GAAP,CAeH,CAnBD,CAqBA,cAAeD,iBAAf"},"metadata":{},"sourceType":"module"}