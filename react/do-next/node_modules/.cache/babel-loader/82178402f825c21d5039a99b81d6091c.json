{"ast":null,"code":"var _jsxFileName = \"/Users/dhs/do-next/src/project/Projects.tsx\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from 'react';\nimport useLocalStorageState from 'use-local-storage-state';\nimport { ProjectStorageKey } from '../Constants';\nimport { defaultProjectData } from '../storage/Storage';\nimport ProjectEdit from './ProjectEdit';\nimport ProjectList from './ProjectList';\nimport { projectStore } from './ProjectStore';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst emptyProject = {\n  id: 0,\n  text: '',\n  beginning: 0,\n  minutes: 0\n};\n\nconst Projects = () => {\n  _s();\n\n  const [projectStorage, setProjectStorage] = useLocalStorageState(ProjectStorageKey, {\n    defaultValue: defaultProjectData\n  });\n  const [edit, setEdit] = useState(false);\n\n  const save = project => {\n    setEdit(false);\n    projectStore(project, projectStorage, setProjectStorage);\n  };\n\n  const tallyMinutes = project => {\n    project.minutes += 15;\n    projectStore(project, projectStorage, setProjectStorage);\n  };\n\n  const orderedProjectSet = {\n    projects: projectStorage.projects.sort((a, b) => {\n      if (b.minutes > a.minutes) {\n        return -1;\n      } else {\n        return 1;\n      }\n    }),\n    last_id: projectStorage.last_id\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"projects\",\n    children: [/*#__PURE__*/_jsxDEV(ProjectList, {\n      projectSet: orderedProjectSet,\n      tally: tallyMinutes\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 9\n    }, this), edit && /*#__PURE__*/_jsxDEV(ProjectEdit, {\n      project: emptyProject,\n      save: save\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 18\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: () => setEdit(true),\n      children: \"+\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 38,\n    columnNumber: 12\n  }, this);\n};\n\n_s(Projects, \"yHpOEUMx7vIZrWl+PROgHWdDPoA=\", false, function () {\n  return [useLocalStorageState];\n});\n\n_c = Projects;\nexport default Projects;\n\nvar _c;\n\n$RefreshReg$(_c, \"Projects\");","map":{"version":3,"names":["React","useState","useLocalStorageState","ProjectStorageKey","defaultProjectData","ProjectEdit","ProjectList","projectStore","emptyProject","id","text","beginning","minutes","Projects","projectStorage","setProjectStorage","defaultValue","edit","setEdit","save","project","tallyMinutes","orderedProjectSet","projects","sort","a","b","last_id"],"sources":["/Users/dhs/do-next/src/project/Projects.tsx"],"sourcesContent":["import React, { useState } from 'react'\nimport useLocalStorageState from 'use-local-storage-state'\nimport { ProjectStorageKey } from '../Constants'\nimport { Project, ProjectSet } from '../DoData'\nimport { defaultProjectData } from '../storage/Storage'\nimport ProjectEdit from './ProjectEdit'\nimport ProjectList from './ProjectList'\nimport { projectStore } from './ProjectStore'\n\nconst emptyProject: Project = {\n    id: 0,\n    text: '',\n    beginning: 0,\n    minutes: 0,\n}\n\nconst Projects = () => {\n    const [projectStorage, setProjectStorage] = useLocalStorageState(ProjectStorageKey, {\n        defaultValue: defaultProjectData\n    })\n    const [edit, setEdit] = useState(false)\n\n    const save = (project: Project) => {\n        setEdit(false)\n        projectStore(project, projectStorage, setProjectStorage)\n    }\n\n    const tallyMinutes = (project: Project) => {\n        project.minutes += 15\n        projectStore(project, projectStorage, setProjectStorage)\n    }\n\n    const orderedProjectSet: ProjectSet = {\n        projects: projectStorage.projects.sort((a, b) => { if (b.minutes > a.minutes) { return -1 } else { return 1 } }),\n        last_id: projectStorage.last_id,\n    }\n\n    return <div className='projects'>\n        <ProjectList projectSet={orderedProjectSet} tally={tallyMinutes} />\n        {edit && <ProjectEdit project={emptyProject} save={save} />}\n        <button onClick={() => setEdit(true)} >+</button>\n    </div>\n}\n\nexport default Projects\n"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;AACA,OAAOC,oBAAP,MAAiC,yBAAjC;AACA,SAASC,iBAAT,QAAkC,cAAlC;AAEA,SAASC,kBAAT,QAAmC,oBAAnC;AACA,OAAOC,WAAP,MAAwB,eAAxB;AACA,OAAOC,WAAP,MAAwB,eAAxB;AACA,SAASC,YAAT,QAA6B,gBAA7B;;AAEA,MAAMC,YAAqB,GAAG;EAC1BC,EAAE,EAAE,CADsB;EAE1BC,IAAI,EAAE,EAFoB;EAG1BC,SAAS,EAAE,CAHe;EAI1BC,OAAO,EAAE;AAJiB,CAA9B;;AAOA,MAAMC,QAAQ,GAAG,MAAM;EAAA;;EACnB,MAAM,CAACC,cAAD,EAAiBC,iBAAjB,IAAsCb,oBAAoB,CAACC,iBAAD,EAAoB;IAChFa,YAAY,EAAEZ;EADkE,CAApB,CAAhE;EAGA,MAAM,CAACa,IAAD,EAAOC,OAAP,IAAkBjB,QAAQ,CAAC,KAAD,CAAhC;;EAEA,MAAMkB,IAAI,GAAIC,OAAD,IAAsB;IAC/BF,OAAO,CAAC,KAAD,CAAP;IACAX,YAAY,CAACa,OAAD,EAAUN,cAAV,EAA0BC,iBAA1B,CAAZ;EACH,CAHD;;EAKA,MAAMM,YAAY,GAAID,OAAD,IAAsB;IACvCA,OAAO,CAACR,OAAR,IAAmB,EAAnB;IACAL,YAAY,CAACa,OAAD,EAAUN,cAAV,EAA0BC,iBAA1B,CAAZ;EACH,CAHD;;EAKA,MAAMO,iBAA6B,GAAG;IAClCC,QAAQ,EAAET,cAAc,CAACS,QAAf,CAAwBC,IAAxB,CAA6B,CAACC,CAAD,EAAIC,CAAJ,KAAU;MAAE,IAAIA,CAAC,CAACd,OAAF,GAAYa,CAAC,CAACb,OAAlB,EAA2B;QAAE,OAAO,CAAC,CAAR;MAAW,CAAxC,MAA8C;QAAE,OAAO,CAAP;MAAU;IAAE,CAArG,CADwB;IAElCe,OAAO,EAAEb,cAAc,CAACa;EAFU,CAAtC;EAKA,oBAAO;IAAK,SAAS,EAAC,UAAf;IAAA,wBACH,QAAC,WAAD;MAAa,UAAU,EAAEL,iBAAzB;MAA4C,KAAK,EAAED;IAAnD;MAAA;MAAA;MAAA;IAAA,QADG,EAEFJ,IAAI,iBAAI,QAAC,WAAD;MAAa,OAAO,EAAET,YAAtB;MAAoC,IAAI,EAAEW;IAA1C;MAAA;MAAA;MAAA;IAAA,QAFN,eAGH;MAAQ,OAAO,EAAE,MAAMD,OAAO,CAAC,IAAD,CAA9B;MAAA;IAAA;MAAA;MAAA;MAAA;IAAA,QAHG;EAAA;IAAA;IAAA;IAAA;EAAA,QAAP;AAKH,CA1BD;;GAAML,Q;UAC0CX,oB;;;KAD1CW,Q;AA4BN,eAAeA,QAAf"},"metadata":{},"sourceType":"module"}