{"ast":null,"code":"import { MinuteMilliseconds } from \"./Constants\";\n\nconst commonDayStart = now => {\n  const nowYear = now.getFullYear();\n  const nowMonthIndex = now.getMonth();\n  const nowMonthDay = now.getDate();\n  const nowTimeZoneOffset = now.getTimezoneOffset() * MinuteMilliseconds;\n  const dayStart = Date.UTC(nowYear, nowMonthIndex, nowMonthDay) + nowTimeZoneOffset;\n  return dayStart;\n};\n\nexport const dayNowStartMilliseconds = () => {\n  const now = new Date();\n  return commonDayStart(now);\n};\nexport const dayTimestampStartMilliseconds = timestamp => {\n  const now = new Date(timestamp);\n  return commonDayStart(now);\n};\nexport const datestampToMinute = () => {\n  const now = new Date();\n  const nowYear = now.getFullYear();\n  const nowMonthIndex = now.getMonth();\n  const nowMonthDay = now.getDate();\n  const nowHour = now.getHours();\n  const nowMinute = now.getMinutes();\n  const nowTimeZoneOffset = now.getTimezoneOffset() * MinuteMilliseconds;\n  const dayStart = Date.UTC(nowYear, nowMonthIndex, nowMonthDay, nowHour, nowMinute) + nowTimeZoneOffset;\n  return dayStart;\n};\nexport const formatDate = dateTime => {\n  const year = dateTime.getFullYear() + '';\n  const month = dateTime.getMonth() + 1 + '';\n  const date = dateTime.getDate() + '';\n  const hours = dateTime.getHours() + '';\n  const minutes = dateTime.getMinutes() + '';\n  const dateString = `${year}` + `-${month.padStart(2, '0')}` + `-${date.padStart(2, '0')}` + ` ${hours.padStart(2, '0')}` + `:${minutes.padStart(2, '0')}` + `:00.000`;\n  return dateString;\n};","map":{"version":3,"names":["MinuteMilliseconds","commonDayStart","now","nowYear","getFullYear","nowMonthIndex","getMonth","nowMonthDay","getDate","nowTimeZoneOffset","getTimezoneOffset","dayStart","Date","UTC","dayNowStartMilliseconds","dayTimestampStartMilliseconds","timestamp","datestampToMinute","nowHour","getHours","nowMinute","getMinutes","formatDate","dateTime","year","month","date","hours","minutes","dateString","padStart"],"sources":["/Users/dhs/do-next/src/DateUtilities.ts"],"sourcesContent":["import { MinuteMilliseconds } from \"./Constants\"\n\nconst commonDayStart = (now: Date) => {\n    const nowYear = now.getFullYear()\n    const nowMonthIndex = now.getMonth()\n    const nowMonthDay = now.getDate()\n    const nowTimeZoneOffset = now.getTimezoneOffset() * MinuteMilliseconds\n    const dayStart = Date.UTC(nowYear, nowMonthIndex, nowMonthDay) + nowTimeZoneOffset\n    return dayStart\n}\n\nexport const dayNowStartMilliseconds = () => {\n    const now = new Date()\n    return commonDayStart(now)\n}\n\nexport const dayTimestampStartMilliseconds = (timestamp: number) => {\n    const now = new Date(timestamp)\n    return commonDayStart(now)\n}\n\nexport const datestampToMinute = (): number => {\n    const now = new Date()\n    const nowYear = now.getFullYear()\n    const nowMonthIndex = now.getMonth()\n    const nowMonthDay = now.getDate()\n    const nowHour = now.getHours()\n    const nowMinute = now.getMinutes()\n    const nowTimeZoneOffset = now.getTimezoneOffset() * MinuteMilliseconds\n    const dayStart = Date.UTC(nowYear, nowMonthIndex, nowMonthDay, nowHour, nowMinute) + nowTimeZoneOffset\n    return dayStart\n}\n\nexport const formatDate = (dateTime: Date) => {\n    const year = dateTime.getFullYear() + ''\n    const month = (dateTime.getMonth() + 1) + ''\n    const date = dateTime.getDate() + ''\n    const hours = dateTime.getHours() + ''\n    const minutes = dateTime.getMinutes() + ''\n\n    const dateString = `${year}`\n        + `-${month.padStart(2, '0')}`\n        + `-${date.padStart(2, '0')}`\n        + ` ${hours.padStart(2, '0')}`\n        + `:${minutes.padStart(2, '0')}`\n        + `:00.000`\n    return dateString\n}"],"mappings":"AAAA,SAASA,kBAAT,QAAmC,aAAnC;;AAEA,MAAMC,cAAc,GAAIC,GAAD,IAAe;EAClC,MAAMC,OAAO,GAAGD,GAAG,CAACE,WAAJ,EAAhB;EACA,MAAMC,aAAa,GAAGH,GAAG,CAACI,QAAJ,EAAtB;EACA,MAAMC,WAAW,GAAGL,GAAG,CAACM,OAAJ,EAApB;EACA,MAAMC,iBAAiB,GAAGP,GAAG,CAACQ,iBAAJ,KAA0BV,kBAApD;EACA,MAAMW,QAAQ,GAAGC,IAAI,CAACC,GAAL,CAASV,OAAT,EAAkBE,aAAlB,EAAiCE,WAAjC,IAAgDE,iBAAjE;EACA,OAAOE,QAAP;AACH,CAPD;;AASA,OAAO,MAAMG,uBAAuB,GAAG,MAAM;EACzC,MAAMZ,GAAG,GAAG,IAAIU,IAAJ,EAAZ;EACA,OAAOX,cAAc,CAACC,GAAD,CAArB;AACH,CAHM;AAKP,OAAO,MAAMa,6BAA6B,GAAIC,SAAD,IAAuB;EAChE,MAAMd,GAAG,GAAG,IAAIU,IAAJ,CAASI,SAAT,CAAZ;EACA,OAAOf,cAAc,CAACC,GAAD,CAArB;AACH,CAHM;AAKP,OAAO,MAAMe,iBAAiB,GAAG,MAAc;EAC3C,MAAMf,GAAG,GAAG,IAAIU,IAAJ,EAAZ;EACA,MAAMT,OAAO,GAAGD,GAAG,CAACE,WAAJ,EAAhB;EACA,MAAMC,aAAa,GAAGH,GAAG,CAACI,QAAJ,EAAtB;EACA,MAAMC,WAAW,GAAGL,GAAG,CAACM,OAAJ,EAApB;EACA,MAAMU,OAAO,GAAGhB,GAAG,CAACiB,QAAJ,EAAhB;EACA,MAAMC,SAAS,GAAGlB,GAAG,CAACmB,UAAJ,EAAlB;EACA,MAAMZ,iBAAiB,GAAGP,GAAG,CAACQ,iBAAJ,KAA0BV,kBAApD;EACA,MAAMW,QAAQ,GAAGC,IAAI,CAACC,GAAL,CAASV,OAAT,EAAkBE,aAAlB,EAAiCE,WAAjC,EAA8CW,OAA9C,EAAuDE,SAAvD,IAAoEX,iBAArF;EACA,OAAOE,QAAP;AACH,CAVM;AAYP,OAAO,MAAMW,UAAU,GAAIC,QAAD,IAAoB;EAC1C,MAAMC,IAAI,GAAGD,QAAQ,CAACnB,WAAT,KAAyB,EAAtC;EACA,MAAMqB,KAAK,GAAIF,QAAQ,CAACjB,QAAT,KAAsB,CAAvB,GAA4B,EAA1C;EACA,MAAMoB,IAAI,GAAGH,QAAQ,CAACf,OAAT,KAAqB,EAAlC;EACA,MAAMmB,KAAK,GAAGJ,QAAQ,CAACJ,QAAT,KAAsB,EAApC;EACA,MAAMS,OAAO,GAAGL,QAAQ,CAACF,UAAT,KAAwB,EAAxC;EAEA,MAAMQ,UAAU,GAAI,GAAEL,IAAK,EAAR,GACZ,IAAGC,KAAK,CAACK,QAAN,CAAe,CAAf,EAAkB,GAAlB,CAAuB,EADd,GAEZ,IAAGJ,IAAI,CAACI,QAAL,CAAc,CAAd,EAAiB,GAAjB,CAAsB,EAFb,GAGZ,IAAGH,KAAK,CAACG,QAAN,CAAe,CAAf,EAAkB,GAAlB,CAAuB,EAHd,GAIZ,IAAGF,OAAO,CAACE,QAAR,CAAiB,CAAjB,EAAoB,GAApB,CAAyB,EAJhB,GAKZ,SALP;EAMA,OAAOD,UAAP;AACH,CAdM"},"metadata":{},"sourceType":"module"}