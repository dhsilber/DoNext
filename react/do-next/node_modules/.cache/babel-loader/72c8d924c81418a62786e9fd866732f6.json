{"ast":null,"code":"var _jsxFileName = \"/Users/dhs/do-next/src/todo/RepeatingDos.tsx\";\nimport { dayNowStartMilliseconds } from \"../DateUtilities\";\nimport ToDo from \"./ToDo\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst RepeatingDos = _ref => {\n  let {\n    data\n  } = _ref;\n  const dayStart = dayNowStartMilliseconds();\n  const today = new Date().getDay();\n  console.log(`In Todos, today is: ${today}`);\n  return /*#__PURE__*/_jsxDEV(\"ul\", {\n    className: \"todo\",\n    children: data.filter(todo => todo.done < dayStart).filter(todo => {\n      console.log(`text: ${todo.text}   days: ${todo.days}`);\n      return true;\n    }).filter(todo => todo.days.length === 0 || todo.days.find(day => {\n      console.log(`checking day: ${day}`);\n      return day == today;\n    })).map(todo => /*#__PURE__*/_jsxDEV(ToDo, {\n      todo: todo\n    }, todo.text, false, {\n      fileName: _jsxFileName,\n      lineNumber: 23,\n      columnNumber: 32\n    }, this))\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 14,\n    columnNumber: 12\n  }, this);\n};\n\n_c = RepeatingDos;\nexport default RepeatingDos;\n\nvar _c;\n\n$RefreshReg$(_c, \"RepeatingDos\");","map":{"version":3,"names":["dayNowStartMilliseconds","ToDo","RepeatingDos","data","dayStart","today","Date","getDay","console","log","filter","todo","done","text","days","length","find","day","map"],"sources":["/Users/dhs/do-next/src/todo/RepeatingDos.tsx"],"sourcesContent":["import { dayNowStartMilliseconds } from \"../DateUtilities\"\nimport { Todo } from \"../DoData\"\nimport ToDo from \"./ToDo\"\n\ninterface RepeatingDosProps {\n    data: Todo[]\n}\n\nconst RepeatingDos = ({ data }: RepeatingDosProps) => {\n    const dayStart = dayNowStartMilliseconds()\n    const today = new Date().getDay()\n    console.log(`In Todos, today is: ${today}`)\n\n    return <ul className=\"todo\">\n        {\n            data\n                .filter(todo => todo.done < dayStart)\n                .filter(todo=>{console.log(`text: ${todo.text}   days: ${todo.days}`)\n            return true})\n                .filter(todo => todo.days.length === 0 || todo.days.find(day => {\n                    console.log(`checking day: ${day}`)\n                    return day == today}))\n                .map((todo) => <ToDo key={todo.text} todo={todo} />)\n        }\n    </ul>\n\n}\n\nexport default RepeatingDos\n"],"mappings":";AAAA,SAASA,uBAAT,QAAwC,kBAAxC;AAEA,OAAOC,IAAP,MAAiB,QAAjB;;;AAMA,MAAMC,YAAY,GAAG,QAAiC;EAAA,IAAhC;IAAEC;EAAF,CAAgC;EAClD,MAAMC,QAAQ,GAAGJ,uBAAuB,EAAxC;EACA,MAAMK,KAAK,GAAG,IAAIC,IAAJ,GAAWC,MAAX,EAAd;EACAC,OAAO,CAACC,GAAR,CAAa,uBAAsBJ,KAAM,EAAzC;EAEA,oBAAO;IAAI,SAAS,EAAC,MAAd;IAAA,UAECF,IAAI,CACCO,MADL,CACYC,IAAI,IAAIA,IAAI,CAACC,IAAL,GAAYR,QADhC,EAEKM,MAFL,CAEYC,IAAI,IAAE;MAACH,OAAO,CAACC,GAAR,CAAa,SAAQE,IAAI,CAACE,IAAK,YAAWF,IAAI,CAACG,IAAK,EAApD;MACnB,OAAO,IAAP;IAAY,CAHZ,EAIKJ,MAJL,CAIYC,IAAI,IAAIA,IAAI,CAACG,IAAL,CAAUC,MAAV,KAAqB,CAArB,IAA0BJ,IAAI,CAACG,IAAL,CAAUE,IAAV,CAAeC,GAAG,IAAI;MAC5DT,OAAO,CAACC,GAAR,CAAa,iBAAgBQ,GAAI,EAAjC;MACA,OAAOA,GAAG,IAAIZ,KAAd;IAAoB,CAFkB,CAJ9C,EAOKa,GAPL,CAOUP,IAAD,iBAAU,QAAC,IAAD;MAAsB,IAAI,EAAEA;IAA5B,GAAWA,IAAI,CAACE,IAAhB;MAAA;MAAA;MAAA;IAAA,QAPnB;EAFD;IAAA;IAAA;IAAA;EAAA,QAAP;AAaH,CAlBD;;KAAMX,Y;AAoBN,eAAeA,YAAf"},"metadata":{},"sourceType":"module"}