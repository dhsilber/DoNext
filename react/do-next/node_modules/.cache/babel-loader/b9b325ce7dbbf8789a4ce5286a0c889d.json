{"ast":null,"code":"import{jsx as _jsx}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";var TaskListElement=function TaskListElement(_ref){var task=_ref.task,save=_ref.save,setEditTask=_ref.setEditTask;return/*#__PURE__*/_jsxs(\"div\",{children:[/*#__PURE__*/_jsxs(\"label\",{children:[/*#__PURE__*/_jsx(\"input\",{type:\"checkbox\",onClick:function onClick(event){task.archived=Date.now();save(task);}}),task.text+' ']}),/*#__PURE__*/_jsx(\"button\",{onClick:function onClick(){setEditTask(task);},children:\"&\"})]});};export default TaskListElement;","map":{"version":3,"names":["TaskListElement","task","save","setEditTask","event","archived","Date","now","text"],"sources":["/Users/dhs/do-next/src/task/TaskListElement.tsx"],"sourcesContent":["import { Task } from \"../DoData\"\n\ninterface TaskListElementProps {\n    task: Task\n    save: (task: Task) => void\n    setEditTask: (task: Task) => void\n}\n\nconst TaskListElement = ({ task, save, setEditTask }: TaskListElementProps) => {\n    return <div>\n        <label>\n            <input\n                type='checkbox'\n                onClick={(event) => {\n                    task.archived = Date.now()\n                    save(task)\n                }}\n            />\n            {task.text + ' '}\n        </label>\n        <button onClick={() => { setEditTask(task) }} >&amp;</button>\n    </div>\n}\n\nexport default TaskListElement\n"],"mappings":"wFAQA,GAAMA,gBAAe,CAAG,QAAlBA,gBAAkB,MAAuD,IAApDC,KAAoD,MAApDA,IAAoD,CAA9CC,IAA8C,MAA9CA,IAA8C,CAAxCC,WAAwC,MAAxCA,WAAwC,CAC3E,mBAAO,oCACH,sCACI,cACI,IAAI,CAAC,UADT,CAEI,OAAO,CAAE,iBAACC,KAAD,CAAW,CAChBH,IAAI,CAACI,QAAL,CAAgBC,IAAI,CAACC,GAAL,EAAhB,CACAL,IAAI,CAACD,IAAD,CAAJ,CACH,CALL,EADJ,CAQKA,IAAI,CAACO,IAAL,CAAY,GARjB,GADG,cAWH,eAAQ,OAAO,CAAE,kBAAM,CAAEL,WAAW,CAACF,IAAD,CAAX,CAAmB,CAA5C,eAXG,GAAP,CAaH,CAdD,CAgBA,cAAeD,gBAAf"},"metadata":{},"sourceType":"module"}